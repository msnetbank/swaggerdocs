{
  "openapi": "3.0.0",
  "tags": [
    {
      "description": "PRODUCT OVERVIEW\n\n<table>\n<tbody><tr>\n<td style=\"background:#D9D8D5;\">Product Name</td>\n<td>Account-As-A-Service</td>\n</tr>\n<tr>\n<td style=\"background:#D9D8D5;\">Product Description</td>\n<td>A service that will allow you to open white-labeled bank accounts under the name of your Company or of your end-users via APIs, via the File Upload Platform, or via a White-Labeled App.</td>\n</tr>\n<tr>\n<td style=\"background:#D9D8D5;\">Use Case</td>\n<td>To be able to open digital and white-labeled savings and/or loan accounts for each of your end-users OR open bank accounts under your name for cash management processes or as a receiving account to collect specific payments from your end-users and/or your merchants.</td>\n</tr>\n<tr>\n<td style=\"background:#D9D8D5;\">Sandbox Base URL</td>\n<td>http://api-sandbox.netbank.ph</td>\n</tr>\n<tr>\n<td style=\"background:#D9D8D5;\">UAT Base URL</td>\n<td>http://api-uat.netbank.ph/</td>\n</tr>\n<tr>\n<td style=\"background:#D9D8D5;\">PROD Base URL</td>\n<td>-</td>\n</tr>\n</tbody></table>\n\n",
      "name": "Account-As-A-Service"
    },
    {
      "description": "PRODUCT OVERVIEW\n\n<table>\n<tbody><tr>\n<td style=\"background:#D9D8D5;\">Product Name</td>\n<td>Disburse-To-Account</td>\n</tr>\n<tr>\n<td style=\"background:#D9D8D5;\">Product Description</td>\n<td>A service that will allow you to disburse funds or payout directly to local bank/e-wallet accounts of your end-users or internal business partners. Process intra-bank fund transfer (Netbank Account to Netbank Account), inter-bank fund transfer (Netbank Account to Other Bank Account), and wallet top up (Netbank Account to e-Wallet) via a single API, via the File Upload Platform, or via a White-Labeled App.</td>\n</tr>\n<tr>\n<td style=\"background:#D9D8D5;\">Use Case</td>\n<td>To be able process intra-bank fund transfer (Disbursement to a Netbank Accounts), inter-bank fund transfer (Disbursement to Other Bank Accounts or e-Wallets) through PESONet via a single API Integration or File Upload. With this solution, you can offer or utilize a service that will allow you and your customers to send funds to any bank or select e-wallet accounts </td>\n</tr>\n<tr>\n<td style=\"background:#D9D8D5;\">Sandbox Base URL</td>\n<td>http://api-sandbox.netbank.ph</td>\n</tr>\n<tr>\n<td style=\"background:#D9D8D5;\">UAT Base URL</td>\n<td>http://api-uat.netbank.ph/</td>\n</tr>\n<tr>\n<td style=\"background:#D9D8D5;\">PROD Base URL</td>\n<td>-</td>\n</tr>\n</tbody></table>\n",
      "name": "Disburse-To-Account"
    }
  ],
  "info": {
    "description": "<style>\nmark{\n    color:red;\n}\n</style>\n<style>\n.errorCodes tr:nth-child(4) td:nth-child(1) { background: #C9DAF8; }\n.errorCodes tr:nth-child(6) td:nth-child(1) { background: #C9DAF8; }\n.errorCodes tr:nth-child(7) td:nth-child(1) { background: #C9DAF8; }\n.errorCodes tr:nth-child(8) td:nth-child(1) { background: #C9DAF8; }\n.errorCodes tr:nth-child(14) td:nth-child(1) { background: #C9DAF8; }\n</style>\n\n# GENERAL GUIDELINES\n\n## INTRODUCTION\n\nWelcome to the Netbank Virtual API Technical Documentation.\n\nThis documentation/reference includes all the details regarding the API endpoints and webhooks that will allow you to integrate Netbank’s financial services into your own applications, systems, and platforms.\n\nWe strongly suggest that you read through the General Guidelines section to familiarize yourself with the overall structure and behavior of the Netbank Virtual APIs.\n\nThe API endpoints are grouped according to the product and are ordered based on the usual call sequence for easier reference. Each product, endpoint, and parameter will have a description to define the purpose of each element.\n\nDisclaimer: We will continually update and enhance this page and its contents whenever necessary.\n\nTo know more about how to get started and the end-to-end onboarding process, you may refer to https://virtual.netbank.ph/get-started\n\nFor any questions/inquiries, you may refer to our FAQs (https://virtual.netbank.ph/faq) or reach out to the Netbank Virtual Team via the Contact Us Form found in various pages of https://virtual.netbank.ph/ and select “Request for integration support for Sandbox and UAT development” in the the “How can we help you?” dropdown.\n\n## DEVELOPMENT ENVIRONMENTS\n\nThere are 3 environments where you could use our APIs for specific purposes.\n\n- <b>SANDBOX (https://api-sandbox.netbank.ph)</b>\n\t- <b><i>Description:</b></i> This environment is where you can “try” or test the request and response of our APIs to have an idea on the format and behaviour that your system needs to integrate with.\n\n\t- <b><i>Purpose of Use:</b></i> To simulate and test the request and response payload of the APIs so you could finalize how your system interacts with our APIs.\n\n\t- <b><i>Connection to our Core:</b></i> These APIs are connected to a limited are of our Core Banking System but it mimics how our APIs would accept requests and return a response.\n\n\t- <b><i>Access Credentials:</b></i> You can quickly and simply generate Sandbox Credentials using the Credentials Management section of your Partner Dashboard.\n\t\n\t\t- Sign-In and access the Netbank Virtual Partner Dashboard\n\t\t\n\t\t- Navigate to the Credentials Management section\n\t\n\t\t- Click “Generate Client ID & Secret”\n\t\n\t\t- Select “Sandbox Environment”\n\t\n\t\t- Take note of your Client ID and Client Secret\n\n\t- <b><i>Requirements to get access:</b></i>\n\n\t\t- Netbank Virtual Account (Sign Up to Netbank Virtual)\n\n\t\t- Sandbox Access Credentials, (Generated via the Credentials Management section of the Partner Dashboard)\n\n- <b>UAT (https://api-uat.netbank.ph)</b>\n\n\t- <b><i>Description:</b></i> This environment is where you can perform a deeper level of testing and review to ensure that your integration with us is ready for Production-use.\n\n\t- <b><i>Purpose of Use:</b></i> To perform various quality assurance testing (e.g. unit, stress, performance, acceptance testing) to ensure that the integration can handle all types of Production-use scenarios.\n\n\t- <b><i>Connection to our Core:</b></i> These APIs are connected to the test environment of our Core Banking System that reflects the same level of capacity and behaviour as the Production environment.\n\n\t- <b><i>Access Credentials:</b></i> You can simply generate UAT Credentials using the Credentials Management section of your Partner Dashboard but we suggest using this environment solely for quality assurance testing-- which is done after you’ve finalized the integration setup to our APIs.\n\n\t\t- Sign-In and access the Netbank Virtual Partner Dashboard\n\n\t\t- Navigate to the Credentials Management section\n\n\t\t- Click “Generate Client ID & Secret”\n\n\t\t- Select “UAT Environment”\n\t\n\t\t- Fill out the Request for UAT Credentials form\n\n\t\t- Take note of your Client ID and Client Secret\n\n\t- <b><i>Requirements to get access:</b></i>\n\n\t\t- Netbank Virtual Account (Sign Up to Netbank Virtual)\n\n\t\t- UAT Access Credentials (Generated via the Credentials Management section of the Partner Dashboard)\n\n\t\t- Information on the product/service that you are building\n\n- <b>PROD (https://api.netbank.ph)</b>\n\n\t- <b><i>Description:</b></i> This environment is where you can create live accounts and initiate live transactions.\n\n\t- <b><i>Purpose of Use:</b></i> To use the Netbank products and services in actual business transactions and use cases.\n\n\t- <b><i>Connection to our Core:</b></i> These APIs are connected to the production environment of our Core Banking System.\n\n\t- <b><i>Access Credentials:</b></i> You can request for Production Credentials using the Credentials Management section of your Partner Dashboard along with the Pre-Production requirements.\n\t\n\t\t- Sign-In and access the Netbank Virtual Partner Dashboard\n\t\n\t\t- Navigate to the Credentials Management section\n\t\n\t\t- Click “Generate Client ID & Secret”\n\t\n\t\t- Select “PROD Environment”\n\t\n\t\t- Fill out the Request for PROD Credentials form\n\t\n\t\t- Wait for Netbank to Approve your Prod Credentials Request\n\t\n\t\t- Take note of your Client ID and Client Secret\n\n\t- <b><i>Requirements to get access:</b></i>\n\n\t\t- Netbank Virtual Account (Sign Up to Netbank Virtual)\n\n\t\t- Prod Access Credentials (Generated via the Credentials Management section of the Partner Dashboard)\n\n\t\t- Information on the product/service that you are building\n\n\t\t- Banking-As-A-Service License Agreement (Signed)\n\n\t\t- Any other relevant agreements (Signed)\n\t\n\t\t- UAT Sign-Off (to indicate that you’ve fully tested the integration in all possible scenarios and that it’s ready for Production-Use)\n\n## AUTHENTICATION\n\nThe Netbank Virtual APIs utilizes OAuth 2.0–a popular and widely used protocol–to authenticate the API requests. Please use this documentation as guide on how to implement the authentication flow: https://oauth.net/2/\n\n- <b>Access Token</b>\n\n\t- the Netbank APIs require an Access Token to process any type of API request (GET, POST, PUT).\n\n\t- An Access Token can be generated after successfully requesting for authorization and getting an Authorization Grant.\n\n\t- The Netbank Virtual Access Token has a default validity of 1 hour. (Netbank can grant long-lived tokens depending on the risk assessment during onboarding)\n\n- <b>Authorization Grant</b>\n\n\tNetbank Virtual supports 2 ways (or “Grant Types”) to get an Authorization Grant depending on the transaction scenario and the  type of authorization needed\n\n\t- <b>If the API User is trying to access/use a Netbank Bank Account that he/she owns,</b>\n\n\t\t- the API User needs to request for authorization directly from Netbank’s Authorization Server\n\n\t\t- the type of Authorization Grant to be used would be the “<b>Client Credentials</b>” (Client ID and Client Secret). Please use this documentation as guide on how to implement the authentication flow: https://oauth.net/2/\n\n\t\t- The Client ID and Secret for this type of Authorization Grant  can be generated by accessing the Partner Dashboard and navigating to the “Credentials Management” > “Environment Access Credentials” > “Generate Client ID & Secret”\n\n\t- <b>If the API User is trying to access/use a Netbank Bank Account of another entity/individual, </b>\n\n\t\t- the API User needs to gather consent and request authorization directly from the Netbank account holder by directing the account holder to Netbank’s Authorization Server\n\n\t\t- the type of Authorization Grant to be used would be the “<b>Authorization Code</b>” (Client ID and Client Secret). Please use this documentation as guide on how to implement the authentication flow: https://oauth.net/2/\n\n\t\t- The Client ID and Secret for this type of Authorization Grant  can be generated by accessing the Partner Dashboard and navigating to the “Credentials Management” > “Authentication Code” > “Generate Client ID & Secret”. The form needs to be filled out:\n\n\t\t\t- <b>Name:</b> Name/Label for your credentials\n\n\t\t\t- <b>Environment:</b> The development environment that you would use these credentials for. (“Sandbox”, “UAT”, “PROD”)\n\n\t\t\t- <b>CORS URL:</b> Describe which URL are permitted to read authorization information from a web browser\n\n\t\t\t- <b>Redirect URL:</b> The url where the user will be redirected after a successful authorization and where the Access Token will be posted\n\n\t\t- An end user's first-time multi-factor authentication (MFA) flow will consist of a three-step Security question, One Time Password (OTP) through SMS and Consent confirmation. A session cookie will stored in the user’s browser and will be valid for 30 days. \t\n\n\t\t- When users have to do re-authentication they will directly go to the OTP page if the session cookie is still valid. If no cookie is present we default to first-time MFA flow.\t\n\n- <b>Authorization URLs</b>\n\t\n\t- <b>Auth Base URL</b>: https://auth.netbank.ph\n\n\t- <b>Authorization URL</b>: https://auth.netbank.ph/oauth2/auth?userid={{customer_id of the account holder}}\n\t\n\t- <b>Token URL</b>:  https://auth.netbank.ph/oauth2/token\n\t\n\t- <b>Scopes</b>\n\n\t\t- Execute a Transaction:  https://auth.netbank.bnk.to/transaction.write\n\t\n\t\t- Offline Access: offline_access\n\n\t\t- OpenID Connect: openid\n\n## ERROR HANDLING\n\nDuring negative scenarios, our APIs would provide 3 identifiers to indicate what the issue is. We suggest to pattern your error handling based on these levels of reference:\n\n- <b>HTTP Response Status Code</b>: This indicates the standard response of an HTTP request.\n\n- <b>Error Code</b>: these are the well defined status codes that gRPC uses.\n\n- <b>Error Message</b>: this will indicate the error description coming from our core system.\n\n## REASON FOR REJECTION\n\n- <b>Settlement Rails Error Code</b>\n\nISO 20022 is a global standard for exchanging electronic messages between financial institutions. There\nare a lot of different messaging formats in the financial section so it is essential to make use of a common\nstandard to get everyone on the same page.\n\n\n| CODE | LABEL | DEFINITION |\n| -- | --| -- |\n| AC01 | IncorrectAccountNumber | Format of the account number specified is not correct |\n| AC02 | InvalidDebtorAccountNumber | Debtor account number invalid or missing |\n| AC03 |InvalidCreditorAccountNumber | Wrong IBAN in SCT |\n| AC04 | ClosedAccountNumber | Account number specified has been closed on the bank of account's books |\n| AC05 | ClosedDebtorAccountNumber | Debtor account number closed |\n| AC06 | BlockedAccount | Account specified is blocked, prohibiting posting of transactions against it.|\n| AC07 | ClosedCreditorAccountNumber | Creditor account number closed |\n| AC08 | InvalidBranchCode | Branch code is invalid or missing |\n| AC09 | InvalidAccountCurrency | Account currency is invalid or missing |\n| AC10 | InvalidDebtorAccountCurrency | Debtor account currency is invalid or missing |\n| AC11 | InvalidCreditorAccountCurrency | Creditor account currency is invalid or missing |\n| AC12 | InvalidAccountType | Account type missing or invalid Generic usage if cannot specify between group and payment information levels |\n| AC13 | InvalidDebtorAccountType | Debtor account type is missing or invalid |\n| AC14 | InvalidAgent | An agent in the payment chain is invalid. |\n| AG01 | TransactionForbidden | Transaction forbidden on this type of account (formerly NoAgreement) |\n| AG02 | InvalidBankOperationCode | Bank Operation code specified in the message is not valid for receiver |\n| AG03 | TransactionNotSupported | Transaction type not supported/authorized on this account |\n| AG04 | InvalidAgentCountry | Agent country code is missing or invalid Generic usage if cannot specify between group and payment information levels |\n| AG05 | InvalidDebtorAgentCountry | Debtor agent country code is missing or invalid |\n| AG06 | InvalidCreditorAgentCountry | Creditor agent country code is missing or invalid |\n| AG07 | UnsuccesfulDirectDebit | Debtor accounts cannot be debited for a generic reason. Code value may be used in general purposes and as a replacement for AM04 if debtor bank does not reveal its customer's insufficient funds for privacy reasons |\n| AG08 | InvalidAccessRights | Transaction failed due to invalid or missing user or access right |\n| AGNT | IncorrectAgent | Agent in the payment workflow is incorrect |\n| AM01 | ZeroAmount | Specified message amount is equal to zero |\n| AM02 | NotAllowedAmount | Specific transaction/message amount is greater than allowed maximum |\n| AM03 | NotAllowedCurrency | Specified message amount is a non processable currency outside of existing agreement |\n| AM04 | InsufficientFunds | Amount of funds available to cover the specified message amount is insufficient. |\n| AM05 | Duplication | Duplication |\n| AM06 | TooLowAmount | Specified transaction amount is less than agreed minimum |\n| AM07 | BlockedAmount | Amount of funds available to cover the specified message amount is insufficient. |\n| AM09 | WrongAmount | Amount received is not the amount agreed or expected |\n| AM10 | InvalidControlSum | Sum of instructed amounts does not equal the control sum. |\n| AM11 | InvalidTransactionCurrency | Transaction currency is invalid or missing|\n| AM12 | InvalidAmount | Amount is invalid or missing |\n| AM13 | AmountExceedsClearingSystemLimit | Transaction amount exceeds limits set by clearing system |\n| AM14 | AmountExceedsAgreedLimit | Transaction amount exceeds limits agreed between bank and client |\n| AM15 | AmountBelowClearingSystemMinimum | Transaction amount below minimum set by clearing system |\n| AM16 | InvalidGroupControlSum | Control Sum at the Group level is invalid |\n| AM17 | InvalidPaymentInfoControlSum | Control Sum at the Payment Information level is invalid |\n| AM18 | InvalidNumberOfTransactions | Number of transactions is invalid or missing Generic usage if cannot specify between group and payment information levels |\n| AM19 | InvalidGroupNumberOfTransactions | Number of transactions at the Group level is invalid or missing |\n| AM20 | InvalidPaymentInfoNumberOfTransactions | Number of transactions at the Payment Information level is invalid |\n| AM21 | LimitExceeded |Transaction amount exceeds limits agreed between bank and client.|\n| ARDT | AlreadyReturnedTransaction | Already returned original SCT |\n| ARPL | AwaitingReply | Reported when the cancellation request cannot be processed because no reply has been received yet from the receiver of the request message. |\n| BE01 | InconsistenWithEndCustomer | Identification of the end customer is not consistent with associated account number (formerly CreditorConsistency). |\n| BE04 | MissingCreditorAddress | Specification of creditor's address, which is required for payment, is missing/not correct (formerly IncorrectCreditorAddress).\n| BE05 | UnrecognisedInitiatingParty| Party who initiated the message is not recognised bythe end customer |\n| BE06 | UnknownEndCustomer | End customer specified is not known at associated Sort/National Bank Code or does no longer exist in the books |\n| BE07 | MissingDebtorAddress | Specification of debtor's address, which is required for payment, is missing/not correct. |\n| BE08 | BankError | Party who initiated the message is not recognised by the end customer Returned as a result of a bank error. |\n| BE09 | InvalidCountry | Country code is missing or Invalid Generic usage if cannot specifically identify debtor or creditor |\n| BE10 | InvalidDebtorCountry | Debtor country code is missing or Invalid |\n| BE11 | InvalidCreditorCountry | Creditor country code is missing or Invalid |\n| BE12 | InvalidCountryOfResidence | Country code of residence is missing or Invalid Generic usage if cannot specifically identify debtor or creditor | \n| BE13 | InvalidDebtorCountryOfResidence | Country code of debtor's residence is missing or Invalid |\n| BE14 | InvalidCreditorCountryOfResidence | Country code of creditor's residence is missing or Invalid |\n| BE15 | InvalidIdentificationCode | Identification code missing or invalid Generic usage if cannot specifically identify debtor or creditor| \n| BE16 | InvalidDebtorIdentificationCode | Debtor or Ultimate Debtor identification code missing or invalid |\n| BE17 | InvalidCreditorIdentificationCode | Creditor or Ultimate Creditor identification code missing or invalid |\n| BE18 | InvalidContactDetails | Contact details missing or invalid |\n| BE19 | InvalidChargeBearerCode | Charge bearer code for transaction type is invalid |\n| BE20 | InvalidNameLength | Name length exceeds local rules for payment type. |\n| BE21 | MissingName | Name missing or invalid Generic usage if cannot specifically identify debtor or creditor |\n| BE22 | MissingCreditorName | Creditor name is missing |\n| CH03 | RequestedExecutionDateOrRequestedCollectionDateTooFarInFuture | Value in Requested Execution Date or Requested Collection Date is too far in the future |\n| CH04 | RequestedExecutionDateOrRequestedCollectionDateTooFarInPast | Value in Requested Execution Date or Requested Collection Date is too far in the past |\n| CH07 | ElementIsNotToBeUsedAtB-andC-Level | Element is not to be used at B- and C-Level |\n| CH09 | MandateChangesNotAllowed | Mandate changes are not allowed |\n| CH10 | InformationOnMandateChangesMissing | Information on mandate changes are missing |\n| CH11 | CreditorIdentifierIncorrect | Value in Creditor Identifier is incorrect |\n| CH12 | CreditorIdentifierNotUnambiguouslyAtTransaction-Level | Creditor Identifier is ambiguous at Transaction Level |\n| CH13 | OriginalDebtorAccountIsNotToBeUsed | Original Debtor Account is not to be used |\n| CH14 | OriginalDebtorAgentIsOnlyToBeUsedWithSequenceTypeFRST | Original Debtor Agent is only to be used with SequenceType=FRST |\n| CH15 | ElementContentIncludesMoreThan140Characters | Content Remittance Information/Structured includes more than 140 characters |\n| CH16 | ElementContentFormallyIncorrect | Content is incorrect |\n| CH17 | ElementNotAdmitted | Element is not allowed |\n| CH19 | ValuesWillBeSetToNextTARGETday | Values in Interbank Settlement Date or Requested Collection Date will be set to the next TARGET day |\n| CH20 | DecimalPointsNotCompatibleWithCurrency | Number of decimal points not compatible with the currency |\n| CH21 | RequiredCompulsoryElementMissing | Mandatory element is missing |\n| CH22 | COREandB2BwithinOnemessage | SDD CORE and B2B not permitted within one message |\n| CN01 | AuthorisationCancelled | Authorisation is canceled. |\n| CNOR | Creditor bank is not registered | Creditor bank is not registered under this BIC in the CSM |\n| CURR | IncorrectCurrency | Currency of the payment is incorrect |\n| CUST | RequestedByCustomer|  Cancellation requested by the Debtor |\n| DNOR | Debtor bank is not registered | Debtor bank is not registered under this BIC in the CSM |\n| DS01 | ElectronicSignaturesCorrect | The electronic signature(s) is/are correct |\n| DS02 | OrderCancelled | An authorized user has canceled the order |\n| DS03 | OrderNotCancelled | The user’s attempt to cancel the order was not successful |\n| DS04 | OrderRejected | The order was rejected by the bank side (for reasons concerning content) |\n| DS05 | OrderForwardedForPostprocessing | The order was correct and could be forwarded for post processing |\n| DS06 | TransferOrder | The order was transferred to VEU |\n| DS07 | ProcessingOK | All actions concerning the order could be done by the EBICS bank server |\n| DS08 | DecompressionError | The decompression of the file was not successful |\n| DS09 | DecryptionError | The decryption of the file was not successful |\n| DS0A | DataSignRequested | Data signature is required. |\n| DS0B | UnknownDataSignFormat | Data signature for the format is not available or invalid. |\n| DS0C | SignerCertificateRevoked | The signer certificate is revoked. |\n| DS0D | SignerCertificateNotValid | The signer certificate is not valid (revoked or not active). |\n| DS0E | IncorrectSignerCertificate | The signer certificate is not present. |\n| DS0F | SignerCertificationAuthoritySignerNotValid | The authority of the signer certification sending the certificate is unknown. |\n| DS0G | NotAllowedPayment | Signers are not allowed to sign this operation type. |\n| DS0H | NotAllowedAccount | Signers are not allowed to sign for this account. |\n| DS0K | NotAllowedNumberOfTransaction | The number of transactions is over the number allowed for this signer. |\n| DS10 | Signer1CertificateRevoked | The certificate is revoked for the first signer. |\n| DS11 | Signer1CertificateNotValid | The certificate is not valid (revoked or not active) for the first signer. |\n| DS12 | IncorrectSigner1Certificate | The certificate is not present for the first signer.|\n| DS13 | SignerCertificationAuthoritySigner1NotValid | The authority of signer certification sending the certificate is unknown for the first signer. |\n| DS14 | UserDoesNotExist | The user is unknown on the server |\n| DS15 | IdenticalSignatureFound | The same signature has already been sent to the bank |\n| DS16 | PublicKeyVersionIncorrect | The public key version is not correct. This code is returned when a customer sends signature files to the financial institution after conversion from an older program version (old ES format) to a new program version (new ES format) without having carried out re-initialisation with regard to a public key change. |\n| DS17 | DifferentOrderDataInSignatures | Order data and signatures don’t match |\n| DS18 | RepeatOrder | File cannot be tested, the complete order has to be repeated. This code is returned in the event of a malfunction during the signature check, e.g. not enough storage space. |\n| DS20 | Signer2CertificateRevoked | The certificate is revoked for the second signer. |\n| DS21 | Signer2CertificateNotValid | The certificate is not valid (revoked or not active) for the second signer. |\n| DS22 | IncorrectSigner2Certificate | The certificate is not present for the second signer. |\n| DS23 | SignerCertificationAuthoritySigner2NotValid | The authority of signer certification sending the certificate is unknown for the second signer. |\n| DS24 | WaitingTimeExpired | Waiting time expired due to incomplete order |\n| DS25 | OrderFileDeleted | The order file was deleted by the bank server(for multiple reasons) |\n| DS26 | UserSignedMultipleTimes | The same user has signed multiple times |\n| DS27 | UserNotYetActivated | The user is not yet activated (technically) |\n| DS28 | ReturnForTechnicalReason | Return following technical problems resulting in erroneous transactions. |\n| DT01 | InvalidDate | Invalid date (eg, wrong or missing settlement date) |\n| DT02 | InvalidCreationDate | Invalid creation date and time in Group Header (eg, historic date) |\n| DT03 | InvalidNonProcessingDate | Invalid non bank processing date (eg, weekend or local public holiday) |\n| DT04 | FutureDateNotSupported | Future date not supported |\n| DT05 | InvalidCutOffDate | Associated message, payment information block or transaction was received after an agreed processing cut-off date, i.e., date in the past. |\n| DT06 | ExecutionDateChanged | Execution Date has been modified in order for transaction to be processed |\n| DU01 | DuplicateMessageID | Message Identification is not unique. | \n| DU02 | DuplicatePaymentInformationID | The Payment Information Block is not unique. |\n| DU03 | DuplicateTransaction | Transactions are not unique. |\n| DU04 | DuplicateEndToEndID | End To End ID is not unique. |\n| DU05 | DuplicateInstructionID | Instruction ID is not unique. |\n| DUPL | DuplicatePayment | Payment is a duplicate of another payment |\n| ED01 | CorrespondentBankNotPossible | Corresponding bank is not not possible. |\n| ED03 | BalanceInfoRequest | Balance of payments complementary info is requested |\n| ED05 | SettlementFailed | Settlement of the transaction has failed. |\n| EMVL | EMV Liability Shift | The card payment is fraudulent and was not processed with EMV technology for an EMV card.|\n| ERIN | ERIOptionNotSupported | The Extended Remittance Information (ERI) option is not supported. |\n| FF01 | Invalid | File Format File Format incomplete or invalid |\n| FF02 | SyntaxError | Syntax error reason is provided as narrative information in the additional reason information. |\n| FF03 | InvalidPaymentTypeInformation | Payment Type Information is missing or invalid Generica usage if cannot specify Service Level or Local Instrument code |\n| FF04 | InvalidServiceLevelCode | Service Level code is missing or invalid |\n| FF05 | InvalidLocalInstrumentCode | Local Instrument code is missing or invalid |\n| FF06 | InvalidCategoryPurposeCode | Category Purpose code is missing or invalid |\n| FF07 | InvalidPurpose | Purpose is missing or invalid |\n| FF08 | InvalidEndToEndId | End to End Id missing or invalid |\n| FF09 | InvalidChequeNumber | Cheque number missing or invalid |\n| FF10 | BankSystemProcessingError | File or transaction cannot be processed due to technical issues at the bank side |\n| FOCR | FollowingCancellationRequest | Return following a cancellation request |\n| FR01 | Fraud | Returned as a result of fraud. |\n| FRTRF | FinalResponseMandate | Canceled Final response/tracking is recalled as the mandate is canceled. |\n| ID01 | CorrespondingOriginalFileStillNotSent | Signature file was sent to the bank but the corresponding original file has not been sent yet. |\n| LEGL | LegalDecision | Reported when the cancellation cannot be accepted because of regulatory rules. |\n| MD01 | NoMandate | No Mandate |\n| MD02 | MissingMandatoryInformationIn | Mandate Mandate related information data required by the scheme is missing. |\n| MD05 | CollectionNotDue | Creditor or creditor's agent should not have collected the direct debit |\n| MD06 | RefundRequestByEndCustomer | Return of funds requested by end customer |\n| MD07 | EndCustomerDeceased | End customer is deceased. |\n| MS02 | NotSpecifiedReasonCustomerGenerated | Reason has not been specified by end customer |\n| MS03 | NotSpecifiedReasonAgentGenerated | Reason has not been specified by agent. |\n| NARR | Narrative | Reason is provided as narrative information in the additional reason information. |\n| NOAS | NoAnswerFromCustomer | No response from Beneficiary |\n| NOCM | NotCompliant | Customer accounts are not compliant with regulatory requirements, for example FICA (in South Africa) or any other regulatory requirements which render an account inactive for certain processing. |\n| NOOR | NoOriginalTransactionReceived | Original SCT never received |\n| PINL | PIN Liability Shift | The card payment is fraudulent (lost and stolen fraud) and was processed as an EMV transaction without PIN verification. |\n| PTNA | PassedtoTheNextAgent | Reported when the cancellation request cannot be accepted because the payment instruction has been passed to the next agent. |\n| RC01 | BankIdentifierIncorrect | The Bank Identifier code specified in the message has an incorrect format (formerly IncorrectFormatForRoutingCode).\n| RC02 | InvalidBankIdentifier | Bank identifier is invalid or missing Generic usage if cannot specify between debit or credit account |\n| RC03 | InvalidDebtorBankIdentifier | Debtor bank identifier is invalid or missing |\n| RC04 | InvalidCreditorBankIdentifier | Creditor bank identifier is invalid or missing |\n| RC05 | InvalidBICIdentifier | BIC identifier is invalid or missing Generic usage if cannot specify between debit or credit account |\n| RC06 | InvalidDebtorBICIdentifier | Debtor BIC identifier is invalid or missing |\n| RC07 | InvalidCreditorBICIdentifier | Creditor BIC identifier is invalid or missing |\n| RC08 | InvalidClearingSystemMemberIdentifier | ClearingSystemMemberidentifier is invalid or missing Generic usage if cannot specify between debit or credit account |\n| RC09 | InvalidDebtorClearingSystemMemberIdentifier | Debtor ClearingSystemMember identifier is invalid or missing |\n| RC10 | InvalidCreditorClearingSystemMemberIdentifier | Creditor ClearingSystemMember identifier is invalid or missing |\n| RC11 | InvalidIntermediaryAgent | Intermediary Agent is invalid or missing |\n| RC12 | MissingCreditorSchemeId | Creditor Scheme Id is invalid or missing |\n| RF01 | NotUniqueTransactionReference | Transaction reference is not unique within the message. |\n| RR01 | Missing Debtor Account or Identification | Specification of the debtor’s account or unique identification needed for reasons of regulatory requirements is insufficient or missing |\n| RR02 | Missing Debtor Name or Address | Specification of the debtor’s name and/or address needed for regulatory requirements is insufficient or missing. |\n| RR03 | Missing Creditor Name or Address | Specification of the creditor’s name and/or address needed for regulatory requirements is insufficient or missing. |\n| RR04 | Regulatory Reason | Regulatory Reason |\n| RR05 | RegulatoryInformationInvalid | Regulatory or Central Bank Reporting information missing, incomplete or invalid. |\n| RR06 | TaxInformationInvalid | Tax information missing, incomplete or invalid. |\n| RR07 | RemittanceInformationInvalid | Remittance information structure does not comply with rules for payment type. |\n| RR08 | RemittanceInformationTruncated | Remittance information truncated to comply with rules for payment type. |\n| RR09 | InvalidStructuredCreditorReference | Structured creditor reference invalid or missing. |\n| RR10 | InvalidCharacterSet | Character set supplied not valid for the country and payment type. |\n| RR11 | InvalidDebtorAgentServiceID | Invalid or missing identification of a bank proprietary service. |\n| RR12 | InvalidPartyID | Invalid or missing identification required within a particular country or payment type. |\n| RUTA | ReturnUponUnableToApply | Return following investigation request and no remediation possible. |\n| SL01 | Specific Service offered by Debtor Agent | Due to specific service offered by the Debtor Agent |\n| SL02 | Specific Service offered by Creditor Agent | Due to specific service offered by the Creditor Agent |\n| SL11 | Creditor not on Whitelist of Debtor | Whitelisting service offered by the Debtor Agent; Debtor has not included the Creditor on its “Whitelist” (yet). In the Whitelist the Debtor may list all allowed Creditors to debit Debtor bank accounts. |\n| SL12 | Creditor on Blacklist of Debtor | Blacklisting service offered by the Debtor Agent; Debtor included the Creditor on his “Blacklist”. In the Blacklist the Debtor may list all Creditors not allowed to debit Debtor bank accounts. |\n| SL13 | Maximum number of Direct Debit Transactions exceeded | Due to Maximum allowed Direct Debit Transactions per period service offered by the Debtor Agent. |\n| SL14 | Maximum Direct Debit Transaction Amount exceeded | Due to Maximum allowed Direct Debit Transaction amount service offered by the Debtor Agent. |\n| SP01 | PaymentStopped | Payment is stopped by the account holder. |\n| SP02 | PreviouslyStopped | Previously stopped by means of a stop payment advice. |\n| SVNR | ServiceNotRendered | The card payment is returned since a cash amount rendered was not correct or goods or a service was not rendered to the customer, e.g. in an ecommerce situation. |\n| SYAD | RequestToSettlementSystemAdministrator | Cancellation requested by System Member to Settlement System Administrator to indicate that the cancellation request must not be forwarded further in the chain. |\n| TA01 | TransmissonAborted | The transmission of the file was not successful – it had to be aborted (for technical reasons) |\n| TD01 | NoDataAvailable | There is no data available (for download) |\n| TD02 | FileNonReadable | The file cannot be read (e.g. unknown format) |\n| TD03 | IncorrectFileStructure | The file format is incomplete or invalid |\n| TECH | TechnicalProblem | Cancellation requested following technical problems resulting in an erroneous transaction. |\n| TM01 | InvalidCutOffTime Formerly: CutOffTime | Associated message, payment information block or transaction was received after agreed processing cut-off time. |\n| TRAC | RemovedFromTracking | Return following direct debit being removed from tracking process. |\n| TS01 | TransmissionSuccessful | The (technical) transmission of the file was successful. |\n| TS04 | TransferToSignByHand | The order was transferred to pass by accompanying note signed by hand\n| UPAY | UnduePayment | Payment is not justified. |\n| 9910 | Receiving Bank- Logged Off | Receiver signed-off |\n| 9912 | Receiving Participant not available | Sending Participant sends a message where the recipient cannot be connected, receives a rejection |\n\n\n## HTTP RESPONSE CODES\n| Code | Label | Description |\n| -- | --| -- |\n| 200 | OK | Processing is successful |\n| 400 | BAD REQUEST | The request payload has a missing parameter and/or invalid format |\n| 403 | FORBIDDEN | The call does not have the proper authentication |\n| 404 | NOT FOUND | The resource that is being retrieved is not existing |\n| 500 | INTERNAL SERVER ERROR | There is an issue in processing the request |\n\n\n\n## ERROR CODES\n\nNetbank Virtual APIs use the gRPC status codes to further classify the success or failure of an API request.\n**Those highlighted in <a style=\"background-color:#C9DAF8;\">blue</a> are the codes that are mostly used by our APIs.\n\n<div class=\"errorCodes\">\n\n| Code | Label | Description |\n| -- | -- | -- |\n| 0 | **OK** | Not an error; returned on success. |\n| 1 | CANCELLED | The operation was cancelled, typically by the caller. |\n| 2 | **UNKNOWN** | Unknown error. For example, this error may be returned when a Status value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. |\n| 3 | **INVALID_ARGUMENT** | The client specified an invalid argument. Note that this differs from FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name) |\n| 4 | DEADLINE_EXCEEDED | The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long |\n| 5 | **NOT_FOUND** | Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, NOT_FOUND may be used. If a request is denied for some users within a class of users, such as user-based access control, PERMISSION_DENIED must be used. |\n| 6 | **ALREADY_EXISTS** | The entity that a client attempted to create (e.g., file or directory) already exists. |\n| 7 | **PERMISSION_DENIED** | The caller does not have permission to execute the specified operation. PERMISSION_DENIED must not be used for rejections caused by exhausting some resource (use RESOURCE_EXHAUSTED instead for those errors). PERMISSION_DENIED must not be used if the caller can not be identified (use UNAUTHENTICATED instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. |\n| 8 | RESOURCE_EXHAUSTED | Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. |\n| 9 | FAILED_PRECONDITION | The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE: (a) Use UNAVAILABLE if the client can retry just the failing call. (b) Use ABORTED if the client should retry at a higher level (e.g., when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence). (c) Use FAILED_PRECONDITION if the client should not retry until the system state has been explicitly fixed. E.g., if an \"rmdir\" fails because the directory is non-empty, FAILED_PRECONDITION should be returned since the client should not retry unless the files are deleted from the directory. |\n| 10 | ABORTED | The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE. |\n| 11 | OUT_OF_RANGE | The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate INVALID_ARGUMENT if asked to read at an offset that is not in the range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from an offset past the current file size. There is a fair bit of overlap between FAILED_PRECONDITION and OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error) when it applies so that callers who are iterating through a space can easily look for an OUT_OF_RANGE error to detect when they are done. |\n| 12 | UNIMPLEMENTED | The operation is not implemented or is not supported/enabled in this service. |\n| 13 | **INTERNAL** | Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. |\n| 14 | UNAVAILABLE | The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. |\n| 15 | DATA_LOSS | Unrecoverable data loss or corruption. |\n| 16 | UNAUTHENTICATED | The request does not have valid authentication credentials for the operation.|\n\n</div>\n\n## API TIMEOUT HANDLING AND IDEMPOTENCY\n\nIdempotency simply refers to the API design principle that ensures that multiple identical API requests should return the same and original response of the initial request instead of reprocessing the operation. The Netbank Virtual APIs are designed to be idempotent in order to:\n\n- <b>Avoid unintentional duplicate API requests</b>\n  \n\tThis protects our API users from the risk of unintentional reprocessing of transactions due to the mistake of re-sending the same API request twice or more.\n\n  \n- <b>Retrieve the API Response in the event of an API Request Timeout</b>\n\n\tThis also serves as a mechanism to retrieve the original response of a request in the event that the API call has timed out due to network interruptions or other causes.\n\nHow does it work:\n\n- Our <b>GET</b> APIs are idempotent by nature given that these APIs retrieve information or data from our database. As such, sending multiple identical requests will return the same response.\n\n- Our <b>POST</b> and <b>PUT</b> APIs can be made idempotent by passing a unique id in the <b>idempotency-key</b> header parameter as part of the API request. Sending a request payload and a idempotency-key that is identical to a previous request and key would simply return the response of the original request without processing the second identical request.\n\n- In case of an API request timeout, simply resend the same request with the same idempotency-key.\n\n\t- If the original request successfully pushed through and was processed in our system, the API would simply return the response of the original request.\n\t\n\t- If the original request did not reach our system, we would process the second request and return a response just like a regular API call.\n\n\t\n## OTHER API GUIDELINES\n\n- When you start to use our APIs either in UAT or PROD, we will create a dedicated “Branch” for you in our core banking system where all your customers, accounts, and transactions would be associated/recorded. This allows us to create a silo for your activities with us to keep it private, secure, and exclusive to your application.\n",
    "title": "Netbank Digital API",
    "version": "0.0.1"
  },
  "servers": [
    {
      "description": "Prod",
      "url": "https://api.netbank.ph"
    },
    {
      "description": "UAT",
      "url": "https://api-uat.netbank.ph"
    },
    {
      "description": "Sandbox",
      "url": "https://api-sandbox.netbank.ph"
    }
  ],
  "paths": {
    "/v1/account/types": {
      "get": {
        "description": "Retrieve list of valid account types and their IDs",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "List Account Types",
        "operationId": "Account-As-A-Service_ListAccountTypes",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "types": {
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action.  Platform must be activated to create production service accounts."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/accounts": {
      "get": {
        "description": "Allows you to retrieve the full list of all bank accounts that you’ve created and associated with an Individual/ Corporate customer profile (CIF).",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Retrieve Bank Accounts of a Customer",
        "operationId": "Account-As-A-Service_RetrieveBankAccountsOfACustomer",
        "parameters": [
          {
            "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.<br />The customer_id is returned by the successful response of either the Create Customer API or Create Corporate Customer API.<br />Must be a valid customer_id that you have created within your Branch.<br />",
            "in": "query",
            "name": "customer_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "GetAccountsResponse wraps the list of accounts.",
                  "example": {
                    "result": [
                      {
                        "account_number": "005-0010-00032-2",
                        "account_type": {
                          "id": "8",
                          "name": "UAT Test Corporate Account"
                        },
                        "accrued_interest": {
                          "cur": "PHP",
                          "num": "0"
                        },
                        "available_balance": {
                          "cur": "PHP",
                          "num": "0"
                        },
                        "balance": {
                          "cur": "PHP",
                          "num": "0"
                        },
                        "branch": "6",
                        "customer_id": "1566",
                        "customer_name": "Juan Dela Cruz",
                        "status": "ACTIVE"
                      }
                    ]
                  },
                  "properties": {
                    "has_more": {
                      "description": "HasMore indicates if there are more accounts available.",
                      "type": "boolean"
                    },
                    "result": {
                      "description": "Result is the paginated query result.",
                      "items": {
                        "description": "Account holds all details about a bank account.",
                        "properties": {
                          "account_number": {
                            "description": "The actual account number of the bank account created for the individual or business/company customer record.",
                            "type": "string"
                          },
                          "account_type": {
                            "properties": {
                              "description": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "title": "The account type of the bank account",
                            "type": "object"
                          },
                          "accrued_interest": {
                            "description": "Amount defines a transaction amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "title": "The amount of interest received by the bank account",
                            "type": "object"
                          },
                          "available_balance": {
                            "description": "Amount defines a transaction amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "title": "The available balance in the bank account that are cleared for transactional use",
                            "type": "object"
                          },
                          "average_daily_balance": {
                            "properties": {
                              "current_month": {
                                "description": "Average daily balance of account for current month.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "interest": {
                                "description": "Average daily balance interest of account.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "past_90days": {
                                "description": "Average daily balance for last 90 days.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "title": "Average daily balance",
                            "type": "object"
                          },
                          "balance": {
                            "description": "Amount defines a transaction amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "title": "The total balance in the bank account that includes both cleared and funds for clearing",
                            "type": "object"
                          },
                          "branch": {
                            "description": "The id of the banking branch that the account belongs to.",
                            "type": "string"
                          },
                          "closed_date": {
                            "description": "Date the account was closed.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "created_date": {
                            "description": "Date the account was created.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "customer_id": {
                            "description": "The id that is associated by our core banking platform to the customer record and profile that owns the account.",
                            "type": "string"
                          },
                          "customer_name": {
                            "description": "The full name of the customer that owns the account.",
                            "type": "string"
                          },
                          "description": {
                            "items": {
                              "type": "string"
                            },
                            "title": "Description",
                            "type": "array"
                          },
                          "interest_rate": {
                            "description": "Interest rate applied to the account.",
                            "type": "string"
                          },
                          "limits": {
                            "description": "Account balance limits.",
                            "properties": {
                              "initial_deposit": {
                                "description": "Initial deposit balance required for activating the account.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "interest_min_balance": {
                                "description": "Minimum balance required for interest accrual calculations.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "maintain_balance": {
                                "description": "Minimum maintainence balance required.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "max_balance": {
                                "description": "Maximum deposit balance allowed in the account.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "reference_id": {
                            "description": "Reference identifier is assigned during account creation, for use in\naligning references across multiple systems.",
                            "type": "string"
                          },
                          "status": {
                            "description": "The status of the bank account.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 5,
                    "message": "customer does not exist"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      },
      "post": {
        "description": "Allows you to create a bank account for an Individual/Corporate customer profile (CIF)",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Create Bank Account",
        "operationId": "Account-As-A-Service_CreateBankAccountMixin1",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "CreateAccountResponse is the response envelope for account creation.",
                  "example": {
                    "account_number": "005-0010-00032-2"
                  },
                  "properties": {
                    "account_number": {
                      "description": "The actual account number of the bank account created for the individual or business/company customer record.\nPlease strictly retain the format and dashes of the account number.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Account created successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 3,
                    "message": "account_type: cannot be blank; description: cannot be blank."
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "customer_id": "1480",
                  "account_type_id": "8",
                  "description": "Corporate Savings Account"
                },
                "description": "CreateAccountRequest wraps all required fields for account creation.",
                "type": "object",
                "properties": {
                  "customer_id": {
                    "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.<br />The customer_id is returned by the successful response of either the Create Customer API or Create Corporate Customer API.<br />Must be a valid customer_id that you have created within your Branch<br />",
                    "type": "string",
                    "title": ""
                  },
                  "account_type_id": {
                    "description": "The id that refers to the type of bank account to be opened (e.g. Regular Savings Account, Limited Account, Loan Account, etc.).<br />Must only input the account type id that is approved for your Branch<br />",
                    "type": "string",
                    "title": ""
                  },
                  "description": {
                    "description": "Descriptive information regarding the account.<br />",
                    "type": "string",
                    "title": ""
                  }
                },
                "required": [
                  "customer_id",
                  "account_type_id",
                  "description"
                ]
              }
            }
          },
          "required": true
        }
      },
      "put": {
        "description": "Allows you to update details of a bank account.",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Update Bank Account",
        "operationId": "Account-As-A-Service_CreateBankAccount",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "processed": "2022-02-02T02:10:52.880Z"
                  },
                  "properties": {
                    "processed": {
                      "description": "The date and time that the account was updated.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "UpdateAccountRequest wraps all required fields for updating account.",
                "type": "object",
                "properties": {
                  "bank_account_number": {
                    "description": "Netbank Bank Account Number<br />",
                    "type": "string",
                    "title": ""
                  },
                  "account_type_id": {
                    "description": "The id that refers to the type of bank account (e.g. Regular Savings Account, Limited Account, Loan Account, etc.).<br />Must only input the account type id that is approved for your Branch<br />",
                    "type": "string",
                    "title": ""
                  },
                  "extra_number": {
                    "description": "Reference Number of the bank account.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "interest_rate": {
                    "description": "The interest that will be applied to the bank account<br />",
                    "type": "string",
                    "title": ""
                  }
                },
                "required": [
                  "bank_account_number"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/accounts/{account_number}": {
      "get": {
        "description": "Allows you to retrieve the details of a specific bank account that you’ve created.",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Retrieve Bank Account Details ",
        "operationId": "Account-As-A-Service_RetrieveBankAccountDetails",
        "parameters": [
          {
            "description": "The actual account number of the bank account created for the individual or business/company customer record.<br />The account_number is returned by the successful response of the Create Account API.<br />Must be a valid Netbank account number with the proper format and dash (e.g. 005-0010-00032-2) that you have created<br />",
            "in": "path",
            "name": "account_number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Account holds all details about a bank account.",
                  "example": {
                    "account_number": "005-0010-00032-2",
                    "account_type": {
                      "id": "8",
                      "name": "UAT Test Corporate Account"
                    },
                    "accrued_interest": {
                      "cur": "PHP",
                      "num": "0"
                    },
                    "available_balance": {
                      "cur": "PHP",
                      "num": "0"
                    },
                    "balance": {
                      "cur": "PHP",
                      "num": "0"
                    },
                    "branch": "6",
                    "customer_id": "1566",
                    "customer_name": "Juan Dela Cruz",
                    "status": "ACTIVE"
                  },
                  "properties": {
                    "account_number": {
                      "description": "The actual account number of the bank account created for the individual or business/company customer record.",
                      "type": "string"
                    },
                    "account_type": {
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "title": "The account type of the bank account",
                      "type": "object"
                    },
                    "accrued_interest": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "title": "The amount of interest received by the bank account",
                      "type": "object"
                    },
                    "available_balance": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "title": "The available balance in the bank account that are cleared for transactional use",
                      "type": "object"
                    },
                    "average_daily_balance": {
                      "properties": {
                        "current_month": {
                          "description": "Average daily balance of account for current month.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "interest": {
                          "description": "Average daily balance interest of account.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "past_90days": {
                          "description": "Average daily balance for last 90 days.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "title": "Average daily balance",
                      "type": "object"
                    },
                    "balance": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "title": "The total balance in the bank account that includes both cleared and funds for clearing",
                      "type": "object"
                    },
                    "branch": {
                      "description": "The id of the banking branch that the account belongs to.",
                      "type": "string"
                    },
                    "closed_date": {
                      "description": "Date the account was closed.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "created_date": {
                      "description": "Date the account was created.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "customer_id": {
                      "description": "The id that is associated by our core banking platform to the customer record and profile that owns the account.",
                      "type": "string"
                    },
                    "customer_name": {
                      "description": "The full name of the customer that owns the account.",
                      "type": "string"
                    },
                    "description": {
                      "items": {
                        "type": "string"
                      },
                      "title": "Description",
                      "type": "array"
                    },
                    "interest_rate": {
                      "description": "Interest rate applied to the account.",
                      "type": "string"
                    },
                    "limits": {
                      "description": "Account balance limits.",
                      "properties": {
                        "initial_deposit": {
                          "description": "Initial deposit balance required for activating the account.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "interest_min_balance": {
                          "description": "Minimum balance required for interest accrual calculations.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "maintain_balance": {
                          "description": "Minimum maintainence balance required.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "max_balance": {
                          "description": "Maximum deposit balance allowed in the account.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "reference_id": {
                      "description": "Reference identifier is assigned during account creation, for use in\naligning references across multiple systems.",
                      "type": "string"
                    },
                    "status": {
                      "description": "The status of the bank account.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 5,
                    "message": "account does not exist"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/accounts/{account_number}/check": {
      "get": {
        "description": "Allows you to quickly verify the existence of a bank account.",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Verify Bank Account Existence",
        "operationId": "Account-As-A-Service_VerifyBankAccountExistence",
        "parameters": [
          {
            "description": "The actual account number of the bank account created for the individual or business/company customer record with dash (e.g. 005-0010-00032-2).<br />The account_number is returned by the successful response of the Create Account API.<br />Must be a valid Netbank account number with dash (e.g. 005-0010-00032-2) that you have created<br />",
            "in": "path",
            "name": "account_number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "CheckAccountResponse is the verification of an account's existence.",
                  "properties": {
                    "account_number": {
                      "description": "Validated account identifier.",
                      "type": "string"
                    },
                    "active": {
                      "description": "Indicates if the account is active or not.",
                      "type": "boolean"
                    },
                    "exists": {
                      "title": "Indicates if the account is active or not",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/accounts/{account_number}/transactions": {
      "get": {
        "description": "Allows you to retrieve the list of transactions of a bank account that you’ve created.",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Retrieve Bank Account Transaction History",
        "operationId": "Account-As-A-Service_RetrieveBankAccountTransactionHistory",
        "parameters": [
          {
            "description": "The actual account number of the bank account created for the individual or business/company customer record.<br />The account_number is returned by the successful response of the Create Account API.<br />Must be a valid Netbank account number with the proper format and dash (e.g. 005-0010-00032-2) that you have created.<br />",
            "in": "path",
            "name": "account_number",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "description": "Return transactions on or after this date (YYYY-MM-DD).<br />",
            "in": "query",
            "name": "start_date",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Return transactions before this date (YYYY-MM-DD).<br />",
            "in": "query",
            "name": "end_date",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Maximum number of transactions to return (up to 100).<br />",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "required": false
          },
          {
            "description": "Offset for the start of the returned transaction list.<br />",
            "in": "query",
            "name": "offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "required": false
          },
          {
            "description": "Filter By Reference ID.<br />",
            "in": "query",
            "name": "reference_id",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "GetTransactionsByAccountResponse is the response message for retrieving a list of transactions.",
                  "properties": {
                    "last_running_balance": {
                      "description": "LastRunningBalance is current balance for related account.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "result": {
                      "description": "Result is a list containing transactions.",
                      "items": {
                        "description": "Transaction holds all details about a transaction.",
                        "properties": {
                          "amount": {
                            "description": "Amount holds the amount value and currency of the transaction.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "customer_id": {
                            "description": "CustomerID is the identifier of the issuer of the transaction.",
                            "type": "string"
                          },
                          "date": {
                            "description": "Date is the date of the transaction.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "description": {
                            "description": "Source + movement of the specific transaction.",
                            "type": "string"
                          },
                          "destination_account": {
                            "description": "DestinationAccount is the account receiving the transaction.",
                            "properties": {
                              "account_alias": {
                                "description": "Alias account number.",
                                "type": "string"
                              },
                              "account_number": {
                                "description": "AccountID is the identifier of the account.",
                                "type": "string"
                              },
                              "bank_code": {
                                "description": "BankCode is code of the bank the account belongs to.",
                                "type": "string"
                              },
                              "branch": {
                                "title": "Branch is the account branch number",
                                "type": "string"
                              }
                            },
                            "required": [
                              "account_number",
                              "bank_code"
                            ],
                            "type": "object"
                          },
                          "destination_offline_user": {
                            "description": "DestinationOfflineUser is the contact information for an offline user.",
                            "properties": {
                              "address": {
                                "description": "Full Address.",
                                "properties": {
                                  "address1": {
                                    "description": "Line 1 of the address.\nLimited to 1-128 chars.",
                                    "type": "string"
                                  },
                                  "address2": {
                                    "description": "Next Line of the address.\nLimited to 0-128 chars.",
                                    "type": "string"
                                  },
                                  "city": {
                                    "description": "City of the address.\nLimited to 1-128 chars.",
                                    "type": "string"
                                  },
                                  "country": {
                                    "description": "Country of the address.\nUse the ISO-3166 Alpha-2 Country Code.",
                                    "type": "string"
                                  },
                                  "postal_code": {
                                    "description": "Postal Code of the sender’s address.\nLimited to 1-20 chars.",
                                    "type": "string"
                                  },
                                  "province": {
                                    "description": "Province of the address.\nLimited to 1-128 chars.",
                                    "type": "string"
                                  },
                                  "state": {
                                    "description": "State of the address.\nLimited to 1-128 chars.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "address1",
                                  "city",
                                  "country",
                                  "postal_code"
                                ],
                                "type": "object"
                              },
                              "customer_id": {
                                "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.\nThe customer_id is returned by the successful response of either the Create Customer API or Create Corporate Customer API.\nMust be a valid customer_id that you have created within your Branch.",
                                "type": "string"
                              },
                              "mobile_no": {
                                "description": "MobileNo contact of the person.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name (Full name) of the person.\nLimited to 1-64 chars.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "fees": {
                            "description": "Fees assesed in the processing of the transaction.",
                            "items": {
                              "properties": {
                                "amount": {
                                  "description": "Fee amount assessed.",
                                  "properties": {
                                    "cur": {
                                      "description": "ISO-4217 currency 3-character code.",
                                      "type": "string"
                                    },
                                    "num": {
                                      "format": "integer",
                                      "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "class": {
                                  "description": "Fee classification.",
                                  "type": "string"
                                },
                                "description": {
                                  "description": "Description of assessed fee.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "operation_id": {
                            "title": "OperationID is the date record when the transaction is modified",
                            "type": "string"
                          },
                          "reference_id": {
                            "description": "Transaction reference identifier.  Can be generated by payment system or input by a user.",
                            "type": "string"
                          },
                          "remarks": {
                            "description": "Remarks is an informational note about the transaction.",
                            "type": "string"
                          },
                          "settlement_rail": {
                            "title": "SettlementRail is the value to allow multi-rail environments",
                            "type": "string"
                          },
                          "source_account": {
                            "description": "SourceAccount is the account emitting the transaction.",
                            "properties": {
                              "account_alias": {
                                "description": "Alias account number.",
                                "type": "string"
                              },
                              "account_number": {
                                "description": "AccountID is the identifier of the account.",
                                "type": "string"
                              },
                              "bank_code": {
                                "description": "BankCode is code of the bank the account belongs to.",
                                "type": "string"
                              },
                              "branch": {
                                "title": "Branch is the account branch number",
                                "type": "string"
                              }
                            },
                            "required": [
                              "account_number",
                              "bank_code"
                            ],
                            "type": "object"
                          },
                          "source_offline_user": {
                            "description": "SourceOfflineUser is the contact information for an offline user.",
                            "properties": {
                              "address": {
                                "description": "Full Address.",
                                "properties": {
                                  "address1": {
                                    "description": "Line 1 of the address.\nLimited to 1-128 chars.",
                                    "type": "string"
                                  },
                                  "address2": {
                                    "description": "Next Line of the address.\nLimited to 0-128 chars.",
                                    "type": "string"
                                  },
                                  "city": {
                                    "description": "City of the address.\nLimited to 1-128 chars.",
                                    "type": "string"
                                  },
                                  "country": {
                                    "description": "Country of the address.\nUse the ISO-3166 Alpha-2 Country Code.",
                                    "type": "string"
                                  },
                                  "postal_code": {
                                    "description": "Postal Code of the sender’s address.\nLimited to 1-20 chars.",
                                    "type": "string"
                                  },
                                  "province": {
                                    "description": "Province of the address.\nLimited to 1-128 chars.",
                                    "type": "string"
                                  },
                                  "state": {
                                    "description": "State of the address.\nLimited to 1-128 chars.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "address1",
                                  "city",
                                  "country",
                                  "postal_code"
                                ],
                                "type": "object"
                              },
                              "customer_id": {
                                "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.\nThe customer_id is returned by the successful response of either the Create Customer API or Create Corporate Customer API.\nMust be a valid customer_id that you have created within your Branch.",
                                "type": "string"
                              },
                              "mobile_no": {
                                "description": "MobileNo contact of the person.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name (Full name) of the person.\nLimited to 1-64 chars.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "status": {
                            "default": "UnknownStatus",
                            "description": "Status is the status of the transaction.",
                            "enum": [
                              "UnknownStatus",
                              "Settled",
                              "ForSettlement",
                              "Pending",
                              "Rejected",
                              "NoDisbursement"
                            ],
                            "type": "string"
                          },
                          "status_details": {
                            "description": "Transaction processing details.",
                            "items": {
                              "properties": {
                                "message": {
                                  "type": "string"
                                },
                                "status": {
                                  "default": "UnknownStatus",
                                  "description": "Status defines the status of a transaction.\n\n - Settled: Status_Settled is the value for a successful transaction.\n - ForSettlement: Status_ForSettlement is the value for ongoing settlement transactions.\n - Pending: Status_Pending is the value for a pending transaction.\n - Rejected: Status_Rejected is the value for a rejected transaction.\n - NoDisbursement: Status_NoDisbursement is the value for a empty transaction.",
                                  "enum": [
                                    "UnknownStatus",
                                    "Settled",
                                    "ForSettlement",
                                    "Pending",
                                    "Rejected",
                                    "NoDisbursement"
                                  ],
                                  "type": "string"
                                },
                                "updated": {
                                  "format": "date-time",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "transaction_id": {
                            "description": "TransactionID is the unique identifier of a transaction.",
                            "type": "string"
                          },
                          "type": {
                            "default": "UnknownType",
                            "description": "Type is the type of transaction.",
                            "enum": [
                              "UnknownType",
                              "Credit",
                              "Debit",
                              "NonMonetary"
                            ],
                            "type": "string"
                          },
                          "updated": {
                            "format": "date-time",
                            "title": "UpdatedDate is the date record when the transaction is modified",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 5,
                    "message": "account does not exist"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/banks": {
      "get": {
        "description": "Allows you to get the latest list of banks and wallets that can receive disbursement transactions.",
        "tags": [
          "Disburse-To-Account"
        ],
        "summary": "Retrieve A List Of Receiving Banks",
        "operationId": "Disburse-To-Account_RetrieveAListOfReceivingBanks",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "banks": {
                      "AIIPPHM1XXX": {
                        "full_name": "AL-AMANAH ISLAMIC BANK",
                        "settlement_rail": {
                          "PESONET": {
                            "bank_code": "AIIPPHM1XXX",
                            "name": "PESONET"
                          }
                        },
                        "swift_bic": "AIIPPHM1XXX"
                      },
                      "ALKBPHM2XXX": {
                        "full_name": "AllBank, Inc.",
                        "settlement_rail": {
                          "PESONET": {
                            "bank_code": "ALKBPHM2XXX",
                            "name": "PESONET"
                          }
                        },
                        "swift_bic": "ALKBPHM2XXX"
                      }
                    }
                  },
                  "properties": {
                    "banks": {
                      "additionalProperties": {
                        "description": "Bank holds all details about a bank.",
                        "properties": {
                          "full_name": {
                            "description": "The complete name of the bank.",
                            "type": "string"
                          },
                          "settlement_rail": {
                            "additionalProperties": {
                              "properties": {
                                "bank_code": {
                                  "description": "The internal Bank Identification Code (BIC) of the financial institution\nwhich should be used when calling the Process Account-To-Account Fund Transfer API.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the rail.",
                                  "type": "string"
                                }
                              },
                              "title": "SettlementRail is the value to allow multi-rail environments",
                              "type": "object"
                            },
                            "description": "Contains the different settlement rails that the financial institution is part of.",
                            "type": "object"
                          },
                          "swift_bic": {
                            "description": "The SWIFT Bank Identification Code (BIC) of the financial institution.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "description": "The primary container of the list of banks.",
                      "type": "object"
                    }
                  },
                  "title": "GetBanksResponse is the response for GetBanks",
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 7,
                    "message": "permission denied"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/customer": {
      "post": {
        "description": "Allows you to pass the KYC information to create the INDIVIDUAL customer profile (CIF) from which the bank account will be associated.",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Create Customer Record",
        "operationId": "Account-As-A-Service_CreateCustomerRecord",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "cif_number": "12847",
                    "customer_id": "1234"
                  },
                  "properties": {
                    "cif_number": {
                      "description": "The number of the Customer Information File of the individual customer within Netbank which can be used as a reference when raising inquiries or issues to the Netbank Support Team.",
                      "type": "string"
                    },
                    "customer_id": {
                      "description": "The id that is associated by our core banking platform to the customer record and profile.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 3,
                    "message": "email: must be a valid email address; primary_phone: (number: cannot be blank.)."
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "first_name": "Netbank",
                  "middle_name": "Test",
                  "last_name": "AccountD",
                  "title": "MR",
                  "gender": "Male",
                  "civil_status": "Single",
                  "email": "test@netbank.ph",
                  "address": {
                    "address1": "QC",
                    "address2": "Metro Manila",
                    "city": "Quezon City",
                    "country": "PH",
                    "postal_code": "1112",
                    "province": "NCR",
                    "state": "Luzon"
                  },
                  "primary_phone": {
                    "country_code": "63",
                    "number": "9171234567",
                    "type": "MOBILE"
                  },
                  "birthdate": {
                    "day": "05",
                    "month": "01",
                    "year": "1991"
                  },
                  "birth_place": "Manila",
                  "birth_place_country": "PH",
                  "allow_credit_line": true,
                  "income": {
                    "cur": "PHP",
                    "num": "50000000000"
                  },
                  "income_type": "SALARY",
                  "work_description": "work desc",
                  "tin": "317001098",
                  "sss": "34-1234567-1",
                  "customer_risk_level": "Normal",
                  "phone_numbers": []
                },
                "description": "",
                "type": "object",
                "properties": {
                  "first_name": {
                    "description": "FirstName is the first name name of customer<br />Limited to 1-128 characters<br />",
                    "type": "string",
                    "title": ""
                  },
                  "middle_name": {
                    "description": "MiddleName is the middle name of customer<br />Limited to 0-128 characters<br />",
                    "type": "string",
                    "title": ""
                  },
                  "last_name": {
                    "description": "LastName is the last name of customer<br />Limited to 1-128 characters<br />",
                    "type": "string",
                    "title": ""
                  },
                  "title": {
                    "description": "Title of the customer<br />Must be UPPERCASE character<br />",
                    "type": "string",
                    "title": ""
                  },
                  "gender": {
                    "description": "Gender of the customer<br />Must be UPPERCASE character<br />",
                    "type": "string",
                    "title": ""
                  },
                  "civil_status": {
                    "description": "Civil status of the customer<br />Must be UPPERCASE character<br />",
                    "type": "string",
                    "title": ""
                  },
                  "email": {
                    "description": "Email address of the customer.<br />Must be in email format (with @domain)<br />",
                    "type": "string",
                    "title": ""
                  },
                  "address": {
                    "description": "Complete address of the customer<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "address1": {
                        "description": "Line 1 of the customer's address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "address2": {
                        "description": "Line 2 of the customer's address<br />Limited to 0-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "city": {
                        "description": "City of the customer's address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "province": {
                        "description": "Province of the customer’s address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "state": {
                        "description": "State of the customer’s address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "country": {
                        "description": "Country of the customer’s address.<br />Use the ISO Alpha-2 Country Code<br />",
                        "type": "string",
                        "title": ""
                      },
                      "postal_code": {
                        "description": "Postal code of the customer’s address<br />Limited to 1-20 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "ownership": {
                        "description": "Ownership of the customer's address<br />",
                        "type": "string",
                        "title": ""
                      }
                    },
                    "required": [
                      "address1",
                      "city",
                      "province",
                      "state",
                      "country",
                      "postal_code"
                    ]
                  },
                  "primary_phone": {
                    "description": "Contact number of the customer<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "country_code": {
                        "description": "Country code of the customer’s contact number<br />",
                        "type": "string",
                        "title": ""
                      },
                      "number": {
                        "description": "Contact number of the customer (without the country code)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "type": {
                        "description": "Type of the customer’s contact number<br />",
                        "type": "string",
                        "title": "",
                        "enum": [
                          "UnknownType",
                          "HOME",
                          "MOBILE",
                          "WORK"
                        ]
                      }
                    },
                    "required": [
                      "country_code",
                      "number",
                      "type"
                    ]
                  },
                  "birthdate": {
                    "description": "Date of birth of the customer<br />age limit between 16 to 120<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "year": {
                        "description": "Must be exactly 4 characters (as a valid year)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "month": {
                        "description": "Must be exactly 2 characters (add a leading zero for single digit months)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "day": {
                        "description": "Must be exactly 2 characters (add a leading zero for single digit days)<br />",
                        "type": "string",
                        "title": ""
                      }
                    },
                    "required": [
                      "year",
                      "month",
                      "day"
                    ]
                  },
                  "birth_place": {
                    "description": "BirthPlace of the customer used as a security question on the consent flow<br />Limited to 1-128 characters<br />",
                    "type": "string",
                    "title": ""
                  },
                  "birth_place_country": {
                    "description": "Country of Birth of the customer.<br />Use the ISO Alpha-2 Country Code<br />",
                    "type": "string",
                    "title": ""
                  },
                  "allow_credit_line": {
                    "description": "Determines if customer is allowed to open credit line.<br />",
                    "type": "boolean",
                    "title": ""
                  },
                  "income": {
                    "description": "Amount defines a transaction amount.<br />",
                    "type": "object",
                    "title": "Estimated income of the customer",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  },
                  "income_type": {
                    "description": "Type of the customer’s income.<br />Must be UPPERCASE character<br />",
                    "type": "string",
                    "title": ""
                  },
                  "work_description": {
                    "description": "Nature of work/business of the customer<br />",
                    "type": "string",
                    "title": ""
                  },
                  "tin": {
                    "description": "Tax Identification Number of the customer<br />",
                    "type": "string",
                    "title": ""
                  },
                  "sss": {
                    "description": "Social Security Number of the customer<br />Limited to 1-10 characters<br />",
                    "type": "string",
                    "title": ""
                  },
                  "customer_risk_level": {
                    "description": "Risk level of the customer according to the KYC<br />Must be UPPERCASE character<br />",
                    "type": "string",
                    "title": ""
                  },
                  "phone_numbers": {
                    "description": "List of additional phone of customer<br />Limited to 0-4 phone numbers<br />",
                    "type": "array",
                    "title": ""
                  }
                },
                "required": [
                  "first_name",
                  "last_name",
                  "gender",
                  "address",
                  "primary_phone",
                  "birthdate",
                  "birth_place",
                  "birth_place_country"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/customer/{customer_id}": {
      "get": {
        "description": "Allows you to retrieve the details of an Individual/Corporate customer profile (CIF) that you’ve created.",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Retrieve Customer Record",
        "operationId": "Account-As-A-Service_RetrieveCustomerRecord",
        "parameters": [
          {
            "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.<br />",
            "in": "path",
            "name": "customer_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "additional_addresses": {
                      "address1": "address 1",
                      "address2": "address 2",
                      "city": "city",
                      "country": "PH",
                      "ownership": "ownership",
                      "postal_code": "postal code",
                      "province": "province",
                      "state": "state"
                    },
                    "address": {
                      "address1": "address 1",
                      "city": "city",
                      "country": "PH",
                      "postal_code": "postal code",
                      "province": "province",
                      "state": "state"
                    },
                    "birthdate": {
                      "day": "5",
                      "month": "1",
                      "year": "1991"
                    },
                    "birthplace": "birth place",
                    "branch_id": "1",
                    "channel": "string",
                    "channel_id": "string",
                    "cif_number": "string",
                    "civil_status": "string",
                    "corporate_info": {
                      "address": {
                        "address1": "address 1",
                        "address2": "address 2",
                        "city": "city",
                        "country": "country",
                        "ownership": "ownership",
                        "postal_code": "postal code",
                        "province": "province",
                        "state": "state"
                      },
                      "authorized_signatory": [
                        {
                          "customer_id": "customer id"
                        }
                      ],
                      "business_name": "business name",
                      "business_phone": {
                        "country_code": "63",
                        "number": "9171234567",
                        "type": "MOBILE"
                      },
                      "business_type": "business type",
                      "contact": {
                        "email": "email",
                        "first_name": "first name",
                        "last_name": "last name",
                        "phone": {
                          "country_code": "63",
                          "number": "9171234567",
                          "type": "MOBILE"
                        }
                      },
                      "founded_date": {
                        "day": "63",
                        "month": "9171234567",
                        "year": "MOBILE"
                      },
                      "fund_source": "fund_source",
                      "income": {
                        "cur": "PHP",
                        "num": "1000"
                      },
                      "incorporation_country": "incorporation country",
                      "total_assets": {
                        "cur": "PHP",
                        "num": "10000"
                      },
                      "trade_name": "trade name"
                    },
                    "created_date": "2023-11-22T10:48:08.161Z",
                    "customer_id": "1",
                    "customer_risk_level": "customer risk level",
                    "customer_type": "INDIVIDUAL",
                    "email": "test@netbank.ph",
                    "first_name": "first name",
                    "gender": "MALE",
                    "last_name": "Last name",
                    "middle_name": "middle name",
                    "phone_numbers": {
                      "country_code": "63",
                      "number": "9171234567",
                      "type": "MOBILE"
                    },
                    "primary_phone": {
                      "country_code": "63",
                      "number": "9171234567",
                      "type": "MOBILE"
                    },
                    "title": "title",
                    "updated_date": "2023-11-22T10:48:08.161Z"
                  },
                  "properties": {
                    "additional_addresses": {
                      "items": {
                        "properties": {
                          "address1": {
                            "title": "Line 1 of the customer's address\nLimited to 1-128 characters",
                            "type": "string"
                          },
                          "address2": {
                            "title": "Line 2 of the customer's address\nLimited to 0-128 characters",
                            "type": "string"
                          },
                          "city": {
                            "title": "City of the customer's address\nLimited to 1-128 characters",
                            "type": "string"
                          },
                          "country": {
                            "title": "Country of the customer’s address.\nUse the ISO Alpha-2 Country Code",
                            "type": "string"
                          },
                          "ownership": {
                            "title": "Ownership of the customer's address",
                            "type": "string"
                          },
                          "postal_code": {
                            "title": "Postal code of the customer’s address\nLimited to 1-20 characters",
                            "type": "string"
                          },
                          "province": {
                            "title": "Province of the customer’s address\nLimited to 1-128 characters",
                            "type": "string"
                          },
                          "state": {
                            "title": "State of the customer’s address\nLimited to 1-128 characters",
                            "type": "string"
                          }
                        },
                        "required": [
                          "address1",
                          "city",
                          "province",
                          "state",
                          "country",
                          "postal_code"
                        ],
                        "type": "object"
                      },
                      "title": "List of additional addresses of the customer",
                      "type": "array"
                    },
                    "address": {
                      "properties": {
                        "address1": {
                          "title": "Line 1 of the customer's address\nLimited to 1-128 characters",
                          "type": "string"
                        },
                        "address2": {
                          "title": "Line 2 of the customer's address\nLimited to 0-128 characters",
                          "type": "string"
                        },
                        "city": {
                          "title": "City of the customer's address\nLimited to 1-128 characters",
                          "type": "string"
                        },
                        "country": {
                          "title": "Country of the customer’s address.\nUse the ISO Alpha-2 Country Code",
                          "type": "string"
                        },
                        "ownership": {
                          "title": "Ownership of the customer's address",
                          "type": "string"
                        },
                        "postal_code": {
                          "title": "Postal code of the customer’s address\nLimited to 1-20 characters",
                          "type": "string"
                        },
                        "province": {
                          "title": "Province of the customer’s address\nLimited to 1-128 characters",
                          "type": "string"
                        },
                        "state": {
                          "title": "State of the customer’s address\nLimited to 1-128 characters",
                          "type": "string"
                        }
                      },
                      "required": [
                        "address1",
                        "city",
                        "province",
                        "state",
                        "country",
                        "postal_code"
                      ],
                      "title": "Complete address of the customer",
                      "type": "object"
                    },
                    "birthdate": {
                      "properties": {
                        "day": {
                          "title": "Must be exactly 2 characters (add a leading zero for single digit days)",
                          "type": "string"
                        },
                        "month": {
                          "title": "Must be exactly 2 characters (add a leading zero for single digit months)",
                          "type": "string"
                        },
                        "year": {
                          "title": "Must be exactly 4 characters (as a valid year)",
                          "type": "string"
                        }
                      },
                      "required": [
                        "year",
                        "month",
                        "day"
                      ],
                      "title": "Date of birth of the customer",
                      "type": "object"
                    },
                    "birthplace": {
                      "title": "Place of birth of the customer",
                      "type": "string"
                    },
                    "branch_id": {
                      "description": "BranchID of the customer.",
                      "type": "string"
                    },
                    "channel": {
                      "title": "Channel of transactions",
                      "type": "string"
                    },
                    "channel_id": {
                      "description": "ChannelID is the unique identifier of a customer.",
                      "type": "string"
                    },
                    "cif_number": {
                      "title": "CIF Number is the customer number",
                      "type": "string"
                    },
                    "civil_status": {
                      "title": "Civil status of the customer",
                      "type": "string"
                    },
                    "corporate_info": {
                      "properties": {
                        "address": {
                          "properties": {
                            "address1": {
                              "title": "Line 1 of the customer's address\nLimited to 1-128 characters",
                              "type": "string"
                            },
                            "address2": {
                              "title": "Line 2 of the customer's address\nLimited to 0-128 characters",
                              "type": "string"
                            },
                            "city": {
                              "title": "City of the customer's address\nLimited to 1-128 characters",
                              "type": "string"
                            },
                            "country": {
                              "title": "Country of the customer’s address.\nUse the ISO Alpha-2 Country Code",
                              "type": "string"
                            },
                            "ownership": {
                              "title": "Ownership of the customer's address",
                              "type": "string"
                            },
                            "postal_code": {
                              "title": "Postal code of the customer’s address\nLimited to 1-20 characters",
                              "type": "string"
                            },
                            "province": {
                              "title": "Province of the customer’s address\nLimited to 1-128 characters",
                              "type": "string"
                            },
                            "state": {
                              "title": "State of the customer’s address\nLimited to 1-128 characters",
                              "type": "string"
                            }
                          },
                          "required": [
                            "address1",
                            "city",
                            "province",
                            "state",
                            "country",
                            "postal_code"
                          ],
                          "title": "Complete address of the business/company",
                          "type": "object"
                        },
                        "authorized_signatory": {
                          "items": {
                            "properties": {
                              "customer_id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "customer_id"
                            ],
                            "type": "object"
                          },
                          "title": "The list of customer_id/s of the business/company’s authorized signatories",
                          "type": "array"
                        },
                        "business_name": {
                          "title": "Name of the business/company",
                          "type": "string"
                        },
                        "business_phone": {
                          "properties": {
                            "country_code": {
                              "title": "Country code of the customer’s contact number",
                              "type": "string"
                            },
                            "number": {
                              "title": "Contact number of the customer (without the country code)",
                              "type": "string"
                            },
                            "type": {
                              "default": "UnknownType",
                              "enum": [
                                "UnknownType",
                                "HOME",
                                "MOBILE",
                                "WORK"
                              ],
                              "title": "Type of the customer’s contact number",
                              "type": "string"
                            }
                          },
                          "required": [
                            "country_code",
                            "number",
                            "type"
                          ],
                          "title": "Contact Number of the business/company",
                          "type": "object"
                        },
                        "business_type": {
                          "title": "Business type of the business/company",
                          "type": "string"
                        },
                        "contact": {
                          "properties": {
                            "email": {
                              "title": "Email address of the contact\nMust be in email format (with @domain)",
                              "type": "string"
                            },
                            "first_name": {
                              "title": "FirstName of the contact",
                              "type": "string"
                            },
                            "last_name": {
                              "title": "LastName of the contact",
                              "type": "string"
                            },
                            "phone": {
                              "properties": {
                                "country_code": {
                                  "title": "Country code of the customer’s contact number",
                                  "type": "string"
                                },
                                "number": {
                                  "title": "Contact number of the customer (without the country code)",
                                  "type": "string"
                                },
                                "type": {
                                  "default": "UnknownType",
                                  "enum": [
                                    "UnknownType",
                                    "HOME",
                                    "MOBILE",
                                    "WORK"
                                  ],
                                  "title": "Type of the customer’s contact number",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "country_code",
                                "number",
                                "type"
                              ],
                              "title": "Phone Number of the contact",
                              "type": "object"
                            }
                          },
                          "required": [
                            "first_name",
                            "last_name",
                            "phone",
                            "email"
                          ],
                          "title": "Primary contact within the business/company",
                          "type": "object"
                        },
                        "founded_date": {
                          "properties": {
                            "day": {
                              "title": "Must be exactly 2 characters (add a leading zero for single digit days)",
                              "type": "string"
                            },
                            "month": {
                              "title": "Must be exactly 2 characters (add a leading zero for single digit months)",
                              "type": "string"
                            },
                            "year": {
                              "title": "Must be exactly 4 characters (as a valid year)",
                              "type": "string"
                            }
                          },
                          "required": [
                            "year",
                            "month",
                            "day"
                          ],
                          "title": "Date that the business/company was founded",
                          "type": "object"
                        },
                        "fund_source": {
                          "title": "Source of funding of the business/company",
                          "type": "string"
                        },
                        "income": {
                          "description": "Amount defines a transaction amount.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "title": "Estimated income of the business/company",
                          "type": "object"
                        },
                        "incorporation_country": {
                          "title": "Place of incorporation of the business/company",
                          "type": "string"
                        },
                        "total_assets": {
                          "description": "Amount defines a transaction amount.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "title": "Estimated size of the business/company",
                          "type": "object"
                        },
                        "trade_name": {
                          "title": "Trade name of the business/company",
                          "type": "string"
                        }
                      },
                      "title": "Details of the business/company",
                      "type": "object"
                    },
                    "created_date": {
                      "format": "date-time",
                      "title": "Date of customer record created",
                      "type": "string"
                    },
                    "customer_id": {
                      "description": "CustomerID is the unique identifier of a customer(UUID).",
                      "type": "string"
                    },
                    "customer_risk_level": {
                      "title": "Risk level of the customer according to the KYC",
                      "type": "string"
                    },
                    "customer_type": {
                      "title": "Type of the Customer Record. Can be “INDIVIDUAL” or “CORPORATE”",
                      "type": "string"
                    },
                    "email": {
                      "title": "Email address of the customer",
                      "type": "string"
                    },
                    "first_name": {
                      "title": "FirstName is the first name name of customer",
                      "type": "string"
                    },
                    "gender": {
                      "title": "Gender of the customer",
                      "type": "string"
                    },
                    "income_type": {
                      "title": "IncomeType of customer record",
                      "type": "string"
                    },
                    "last_name": {
                      "title": "LastName is the last name of customer",
                      "type": "string"
                    },
                    "middle_name": {
                      "title": "MiddleName is the middle name of customer",
                      "type": "string"
                    },
                    "phone_numbers": {
                      "items": {
                        "properties": {
                          "country_code": {
                            "title": "Country code of the customer’s contact number",
                            "type": "string"
                          },
                          "number": {
                            "title": "Contact number of the customer (without the country code)",
                            "type": "string"
                          },
                          "type": {
                            "default": "UnknownType",
                            "enum": [
                              "UnknownType",
                              "HOME",
                              "MOBILE",
                              "WORK"
                            ],
                            "title": "Type of the customer’s contact number",
                            "type": "string"
                          }
                        },
                        "required": [
                          "country_code",
                          "number",
                          "type"
                        ],
                        "type": "object"
                      },
                      "title": "List of additional phone of customer",
                      "type": "array"
                    },
                    "primary_phone": {
                      "properties": {
                        "country_code": {
                          "title": "Country code of the customer’s contact number",
                          "type": "string"
                        },
                        "number": {
                          "title": "Contact number of the customer (without the country code)",
                          "type": "string"
                        },
                        "type": {
                          "default": "UnknownType",
                          "enum": [
                            "UnknownType",
                            "HOME",
                            "MOBILE",
                            "WORK"
                          ],
                          "title": "Type of the customer’s contact number",
                          "type": "string"
                        }
                      },
                      "required": [
                        "country_code",
                        "number",
                        "type"
                      ],
                      "title": "Contact number of the customer",
                      "type": "object"
                    },
                    "title": {
                      "title": "Title of the customer",
                      "type": "string"
                    },
                    "updated_date": {
                      "format": "date-time",
                      "title": "Date of customer record updated",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 5,
                    "details": [
                      {
                        "@type": "string",
                        "trace_id": "string"
                      }
                    ],
                    "message": "customer does not exist"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      },
      "put": {
        "description": "Allows you to upload the necessary KYC Documentation for a specific Individual or Corporate Customer.",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Perform KYC Document Upload.",
        "operationId": "Account-As-A-Service_PerformKYCDocumentUpload",
        "parameters": [
          {
            "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.<br />The customer_id is returned by the successful response of either the Create Customer API or Create Corporate Customer API.<br />Must be a valid customer_id that you have created within your Branch<br />",
            "in": "path",
            "name": "customer_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "processed": "2022-02-02T02:10:52.880Z"
                  },
                  "properties": {
                    "processed": {
                      "description": "The date and time that the file was uploaded.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 3,
                    "message": "email: must be a valid email address; primary_phone: (number: cannot be blank.)."
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "customer_id": "1827",
                  "document_name": "JuanDelaCruz_Philhealth_Card",
                  "document_type": "legal_id",
                  "id_type": "ID26",
                  "id_number": "12345678",
                  "id_status": "VALID",
                  "issuer": "PhilHealth NCR",
                  "country": "PH",
                  "primary_id": true,
                  "file": "iVBORw0KGgoAAAANSUhEUgAABAAAAAKfCAMAAADHI0odAAAC91BMVEUAAAFhmQlFgQpHggpSkQpfoAtrsAu8vLy8vLq8vLy8vLyjt3mn0AiszBKh5AuM2Q2CzQx3vwy84AfQ4QRrrwttsgxwtgxzuQx1vAx3vwx6wgx8xQx+yAyBzAyEzwyH0wyK1g2N2g2Q3g2T4Q2W5A2Y5A2a5Ayd5Ayg5Auj5Aqm5Aup5Aqs5Aqt5Aqv5Aqx5Amz5Am15Am35Ai65Ai85Ai/5AfD5AfG5AbK5AbO5AXR5AXU5QXX4gXY5ATV3wTS3ATP2QTN1wPL1API0gPGzwPDzAPByQO+xgO7wwO4wAO1vQOyugKxuAKvtQKttAKrsgKpsAKnrQKlqwKjqQKiqAKgpgKfpAKcoQKZngGXnAGVmgGTmAGSlgGRlQGPkgGMkAGJjQGGiQGDhgGBgwB",
                  "expiration": {
                    "day": "29",
                    "month": "12",
                    "year": "2022"
                  },
                  "received": {
                    "day": "01",
                    "month": "02",
                    "year": "2022"
                  },
                  "comments": "Philhealth Card"
                },
                "description": "",
                "type": "object",
                "properties": {
                  "customer_id": {
                    "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.<br />The customer_id is returned by the successful response of either the Create Customer API or Create Corporate Customer API.<br />Must be a valid customer_id that you have created within your Branch<br />",
                    "type": "string",
                    "title": ""
                  },
                  "document_name": {
                    "description": "Name of the id/document  being uploaded<br />Limited to 4-64 chars<br />",
                    "type": "string",
                    "title": ""
                  },
                  "document_type": {
                    "description": "The code of the ”document_type” from the Retrieve KYC Document Types API that matches the type of the id/document being uploaded.<br />Must be a valid document_type code from the Retrieve KYC Document Types API.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "id_type": {
                    "description": "Only required if \"document_type\" = \"legal_id\"<br />The code of the ”id_type” from the Retrieve KYC Document Types API that matches the type of the id/document being uploaded.<br />Must be a valid id_type code from the Retrieve KYC Document Types API<br />Limited to 3-64 chars<br />",
                    "type": "string",
                    "title": ""
                  },
                  "id_number": {
                    "description": "Only required if \"document_type\" = \"legal_id\"<br />The valid number of the id/document being uploaded.<br />Limited to 4-64 chars<br />",
                    "type": "string",
                    "title": ""
                  },
                  "id_status": {
                    "description": "Only required if \"document_type\" = \"legal_id\"<br />Status of the id/document being uploaded.<br />Limited to 4-64 chars<br />",
                    "type": "string",
                    "title": ""
                  },
                  "issuer": {
                    "description": "The issuing authority of the id/document being uploaded<br />Limited to 2-64 chars<br />",
                    "type": "string",
                    "title": ""
                  },
                  "country": {
                    "description": "The issuing country of the id/document being uploaded.<br />Use the ISO Alpha-2 Country Code<br />",
                    "type": "string",
                    "title": ""
                  },
                  "primary_id": {
                    "description": "Identifies if the id/document being uploaded is a primary id or not<br />",
                    "type": "boolean",
                    "title": ""
                  },
                  "file": {
                    "description": "The Base64 encoded value of the id/document being uploaded<br />",
                    "type": "string",
                    "title": ""
                  },
                  "expiration": {
                    "description": "Expiration date of the id/document being uploaded<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "year": {
                        "description": "Must be exactly 4 characters (as a valid year)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "month": {
                        "description": "Must be exactly 2 characters (add a leading zero for single digit months)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "day": {
                        "description": "Must be exactly 2 characters (add a leading zero for single digit days)<br />",
                        "type": "string",
                        "title": ""
                      }
                    },
                    "required": [
                      "year",
                      "month",
                      "day"
                    ]
                  },
                  "received": {
                    "description": "The date when id/document being uploaded was received<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "year": {
                        "description": "Must be exactly 4 characters (as a valid year)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "month": {
                        "description": "Must be exactly 2 characters (add a leading zero for single digit months)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "day": {
                        "description": "Must be exactly 2 characters (add a leading zero for single digit days)<br />",
                        "type": "string",
                        "title": ""
                      }
                    },
                    "required": [
                      "year",
                      "month",
                      "day"
                    ]
                  },
                  "comments": {
                    "description": "Additional comments or remarks regarding the id/document being uploaded<br />",
                    "type": "string",
                    "title": ""
                  }
                },
                "required": [
                  "customer_id",
                  "document_name",
                  "document_type",
                  "issuer",
                  "country",
                  "primary_id",
                  "file",
                  "expiration",
                  "received",
                  "comments"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/customer/corporate": {
      "post": {
        "description": "Allows you to pass the KYC information to create the CORPORATE customer profile (CIF) from which the bank account will be associated.",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Create Corporate Record",
        "operationId": "Account-As-A-Service_CreateCorporateRecord",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "cif_number": "12847",
                    "customer_id": "1234"
                  },
                  "properties": {
                    "cif_number": {
                      "description": "The number of the Customer Information File of the individual customer within Netbank which can be used as a reference when raising inquiries or issues to the Netbank Support Team.",
                      "type": "string"
                    },
                    "customer_id": {
                      "description": "The id that is associated by our core banking platform to the customer record and profile.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 3,
                    "message": "business_name: cannot be blank; founded_date: cannot be blank."
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "business_name": "Netbank Corp SandboxDev2",
                  "trade_name": "NetbankSandboxDev1",
                  "address": {
                    "address1": "VN",
                    "address2": "Nova",
                    "city": "QC",
                    "country": "PH",
                    "ownership": "OWNED",
                    "postal_code": "1123",
                    "province": "NCR",
                    "state": "LUZON"
                  },
                  "business_type": "ASSOCIATION",
                  "total_assets": {
                    "cur": "PHP",
                    "num": "50000000"
                  },
                  "income": {
                    "cur": "PHP",
                    "num": "50000000"
                  },
                  "fund_source": "IPO",
                  "contact": {
                    "email": "email@test.com",
                    "first_name": "Juan",
                    "last_name": "Dela Cruz",
                    "phone": {
                      "country_code": "63",
                      "number": "9327076778",
                      "type": "HOME"
                    }
                  },
                  "business_phone": {
                    "country_code": "63",
                    "number": "9327076777",
                    "type": "HOME"
                  },
                  "founded_date": {
                    "day": "01",
                    "month": "01",
                    "year": "2011"
                  },
                  "incorporation_country": "PH",
                  "authorized_signatory": [
                    {
                      "customer_id": "1990"
                    }
                  ],
                  "related_document": [],
                  "allow_credit_line": true
                },
                "description": "",
                "type": "object",
                "properties": {
                  "business_name": {
                    "description": "Name of the business/company<br />",
                    "type": "string",
                    "title": ""
                  },
                  "trade_name": {
                    "description": "Trade name of the business/company<br />",
                    "type": "string",
                    "title": ""
                  },
                  "address": {
                    "description": "Complete address of the business/company<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "address1": {
                        "description": "Line 1 of the customer's address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "address2": {
                        "description": "Line 2 of the customer's address<br />Limited to 0-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "city": {
                        "description": "City of the customer's address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "province": {
                        "description": "Province of the customer’s address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "state": {
                        "description": "State of the customer’s address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "country": {
                        "description": "Country of the customer’s address.<br />Use the ISO Alpha-2 Country Code<br />",
                        "type": "string",
                        "title": ""
                      },
                      "postal_code": {
                        "description": "Postal code of the customer’s address<br />Limited to 1-20 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "ownership": {
                        "description": "Ownership of the customer's address<br />",
                        "type": "string",
                        "title": ""
                      }
                    },
                    "required": [
                      "address1",
                      "city",
                      "province",
                      "state",
                      "country",
                      "postal_code"
                    ]
                  },
                  "business_type": {
                    "description": "Type of the business/company.<br />List available value : 'ASSOCIATION', 'COOPERATIVE', 'CORPORATION', 'GOVERNMENT', 'NON_PROFIT_ORGANIZATION', 'PARTNERSHIP', 'SEC_REGISTERED', 'SOLE_PROPRIETORSHIP'.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "total_assets": {
                    "description": "Amount defines a transaction amount.<br />",
                    "type": "object",
                    "title": "Estimated size of the business/company",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  },
                  "income": {
                    "description": "Amount defines a transaction amount.<br />",
                    "type": "object",
                    "title": "Estimated income of the business/company",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  },
                  "fund_source": {
                    "description": "Source of funding of the business/company<br />",
                    "type": "string",
                    "title": ""
                  },
                  "contact": {
                    "description": "Primary contact within the business/company<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "email": {
                        "description": "Email address of the contact<br />Must be in email format (with @domain)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "first_name": {
                        "description": "FirstName of the contact<br />",
                        "type": "string",
                        "title": ""
                      },
                      "last_name": {
                        "description": "LastName of the contact<br />",
                        "type": "string",
                        "title": ""
                      },
                      "phone": {
                        "description": "Phone Number of the contact<br />",
                        "type": "object",
                        "title": "",
                        "properties": {
                          "country_code": {
                            "description": "Country code of the customer’s contact number<br />",
                            "type": "string",
                            "title": ""
                          },
                          "number": {
                            "description": "Contact number of the customer (without the country code)<br />",
                            "type": "string",
                            "title": ""
                          },
                          "type": {
                            "description": "Type of the customer’s contact number<br />",
                            "type": "string",
                            "title": "",
                            "enum": [
                              "UnknownType",
                              "HOME",
                              "MOBILE",
                              "WORK"
                            ]
                          }
                        },
                        "required": [
                          "country_code",
                          "number",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "first_name",
                      "last_name",
                      "phone",
                      "email"
                    ]
                  },
                  "business_phone": {
                    "description": "Contact number of the business/company<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "country_code": {
                        "description": "Country code of the customer’s contact number<br />",
                        "type": "string",
                        "title": ""
                      },
                      "number": {
                        "description": "Contact number of the customer (without the country code)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "type": {
                        "description": "Type of the customer’s contact number<br />",
                        "type": "string",
                        "title": "",
                        "enum": [
                          "UnknownType",
                          "HOME",
                          "MOBILE",
                          "WORK"
                        ]
                      }
                    },
                    "required": [
                      "country_code",
                      "number",
                      "type"
                    ]
                  },
                  "founded_date": {
                    "description": "Date that the business/company was founded<br />founded date limit between 1500-01-01 to today<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "year": {
                        "description": "Must be exactly 4 characters (as a valid year)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "month": {
                        "description": "Must be exactly 2 characters (add a leading zero for single digit months)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "day": {
                        "description": "Must be exactly 2 characters (add a leading zero for single digit days)<br />",
                        "type": "string",
                        "title": ""
                      }
                    },
                    "required": [
                      "year",
                      "month",
                      "day"
                    ]
                  },
                  "incorporation_country": {
                    "description": "Place of incorporation of the business/company<br />Use the ISO Alpha-2 Country Code<br />",
                    "type": "string",
                    "title": ""
                  },
                  "authorized_signatory": {
                    "description": "The list of customer_id/s of the business/company’s authorized signatories<br />Limited to 0-128 signatories<br />",
                    "type": "array",
                    "title": ""
                  },
                  "related_document": {
                    "description": "Related Document<br />",
                    "type": "array",
                    "title": ""
                  },
                  "allow_credit_line": {
                    "description": "Determines if customer is allowed to open credit line.<br />",
                    "type": "boolean",
                    "title": ""
                  }
                },
                "required": [
                  "business_name",
                  "trade_name",
                  "address",
                  "total_assets",
                  "income",
                  "fund_source",
                  "contact",
                  "business_phone",
                  "founded_date",
                  "incorporation_country"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/customer/corporate/{customer_id}": {
      "put": {
        "description": "Allows you to update details of a Corporate Customer.",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Update Corporate Record",
        "operationId": "Account-As-A-Service_UpdateCorporateRecord",
        "parameters": [
          {
            "description": "The id that is associated by our core banking platform to the corporate business customer record.<br />The customer_id is returned by the successful response of the Create Corporate Customer API.<br />Must be a valid customer_id that you have created within your Branch<br />",
            "in": "path",
            "name": "customer_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "processed": "2022-02-02T02:10:52.880Z"
                  },
                  "properties": {
                    "processed": {
                      "description": "The date and time that the file was uploaded.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 3,
                    "message": "email: must be a valid email address; primary_phone: (number: cannot be blank.)."
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "customer_id": {
                    "description": "The id that is associated by our core banking platform to the corporate business customer record.<br />The customer_id is returned by the successful response of the Create Corporate Customer API.<br />Must be a valid customer_id that you have created within your Branch<br />",
                    "type": "string",
                    "title": ""
                  },
                  "trade_name": {
                    "description": "Trade name of the business/company<br />",
                    "type": "string",
                    "title": ""
                  },
                  "address": {
                    "description": "Complete address of the business/company<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "address1": {
                        "description": "Line 1 of the customer's address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "address2": {
                        "description": "Line 2 of the customer's address<br />Limited to 0-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "city": {
                        "description": "City of the customer's address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "province": {
                        "description": "Province of the customer’s address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "state": {
                        "description": "State of the customer’s address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "country": {
                        "description": "Country of the customer’s address.<br />Use the ISO Alpha-2 Country Code<br />",
                        "type": "string",
                        "title": ""
                      },
                      "postal_code": {
                        "description": "Postal code of the customer’s address<br />Limited to 1-20 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "ownership": {
                        "description": "Ownership of the customer's address<br />",
                        "type": "string",
                        "title": ""
                      }
                    },
                    "required": [
                      "address1",
                      "city",
                      "province",
                      "state",
                      "country",
                      "postal_code"
                    ]
                  },
                  "total_assets": {
                    "description": "Amount defines a transaction amount.<br />",
                    "type": "object",
                    "title": "Estimated size of the business/company",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  },
                  "income": {
                    "description": "Amount defines a transaction amount.<br />",
                    "type": "object",
                    "title": "Estimated income of the business/company",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  },
                  "contact": {
                    "description": "Primary contact within the business/company<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "email": {
                        "description": "Email address of the contact<br />Must be in email format (with @domain)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "first_name": {
                        "description": "FirstName of the contact<br />",
                        "type": "string",
                        "title": ""
                      },
                      "last_name": {
                        "description": "LastName of the contact<br />",
                        "type": "string",
                        "title": ""
                      },
                      "phone": {
                        "description": "Phone Number of the contact<br />",
                        "type": "object",
                        "title": "",
                        "properties": {
                          "country_code": {
                            "description": "Country code of the customer’s contact number<br />",
                            "type": "string",
                            "title": ""
                          },
                          "number": {
                            "description": "Contact number of the customer (without the country code)<br />",
                            "type": "string",
                            "title": ""
                          },
                          "type": {
                            "description": "Type of the customer’s contact number<br />",
                            "type": "string",
                            "title": "",
                            "enum": [
                              "UnknownType",
                              "HOME",
                              "MOBILE",
                              "WORK"
                            ]
                          }
                        },
                        "required": [
                          "country_code",
                          "number",
                          "type"
                        ]
                      }
                    },
                    "required": [
                      "first_name",
                      "last_name",
                      "phone",
                      "email"
                    ]
                  },
                  "business_phone": {
                    "description": "Contact number of the business/company<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "country_code": {
                        "description": "Country code of the customer’s contact number<br />",
                        "type": "string",
                        "title": ""
                      },
                      "number": {
                        "description": "Contact number of the customer (without the country code)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "type": {
                        "description": "Type of the customer’s contact number<br />",
                        "type": "string",
                        "title": "",
                        "enum": [
                          "UnknownType",
                          "HOME",
                          "MOBILE",
                          "WORK"
                        ]
                      }
                    },
                    "required": [
                      "country_code",
                      "number",
                      "type"
                    ]
                  },
                  "fund_source": {
                    "description": "Source of funding of the business/company<br />",
                    "type": "string",
                    "title": ""
                  },
                  "authorized_signatory": {
                    "description": "The list of customer_id/s of the business/company’s authorized signatories<br />Limited to 0-128 signatories<br />",
                    "type": "array",
                    "title": ""
                  }
                },
                "required": [
                  "customer_id"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/customer/individual/{customer_id}": {
      "put": {
        "description": "Allows you to update details of a Individual Customer.",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Update Individual Record",
        "operationId": "Account-As-A-Service_UpdateIndividualRecord",
        "parameters": [
          {
            "description": "The id that is associated by our core banking platform to the individual customer record.<br />The customer_id is returned by the successful response of the Create Individual Customer API.<br />Must be a valid customer_id that you have created within your Branch<br />",
            "in": "path",
            "name": "customer_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "processed": "2022-02-02T02:10:52.880Z"
                  },
                  "properties": {
                    "processed": {
                      "description": "The date and time that the file was uploaded.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 3,
                    "message": "endpoint not found"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "customer_id": {
                    "description": "The id that is associated by our core banking platform to the individual customer record.<br />The customer_id is returned by the successful response of the Create Individual Customer API.<br />Must be a valid customer_id that you have created within your Branch<br />",
                    "type": "string",
                    "title": ""
                  },
                  "middle_name": {
                    "description": "middle name of the individual cutomer<br />",
                    "type": "string",
                    "title": ""
                  },
                  "last_name": {
                    "description": "last name of the individual cutomer<br />",
                    "type": "string",
                    "title": ""
                  },
                  "title": {
                    "description": "title of the individual cutomer<br />Must be UPPERCASE character<br />",
                    "type": "string",
                    "title": ""
                  },
                  "civil_status": {
                    "description": "civil_status of the individual cutomer<br />Must be UPPERCASE character<br />",
                    "type": "string",
                    "title": ""
                  },
                  "email": {
                    "description": "email of the individual cutomer<br />",
                    "type": "string",
                    "title": ""
                  },
                  "address": {
                    "description": "address of the individual cutomer<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "address1": {
                        "description": "Line 1 of the customer's address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "address2": {
                        "description": "Line 2 of the customer's address<br />Limited to 0-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "city": {
                        "description": "City of the customer's address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "province": {
                        "description": "Province of the customer’s address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "state": {
                        "description": "State of the customer’s address<br />Limited to 1-128 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "country": {
                        "description": "Country of the customer’s address.<br />Use the ISO Alpha-2 Country Code<br />",
                        "type": "string",
                        "title": ""
                      },
                      "postal_code": {
                        "description": "Postal code of the customer’s address<br />Limited to 1-20 characters<br />",
                        "type": "string",
                        "title": ""
                      },
                      "ownership": {
                        "description": "Ownership of the customer's address<br />",
                        "type": "string",
                        "title": ""
                      }
                    },
                    "required": [
                      "address1",
                      "city",
                      "province",
                      "state",
                      "country",
                      "postal_code"
                    ]
                  },
                  "primary_phone": {
                    "description": "primary phone of the individual cutomer<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "country_code": {
                        "description": "Country code of the customer’s contact number<br />",
                        "type": "string",
                        "title": ""
                      },
                      "number": {
                        "description": "Contact number of the customer (without the country code)<br />",
                        "type": "string",
                        "title": ""
                      },
                      "type": {
                        "description": "Type of the customer’s contact number<br />",
                        "type": "string",
                        "title": "",
                        "enum": [
                          "UnknownType",
                          "HOME",
                          "MOBILE",
                          "WORK"
                        ]
                      }
                    },
                    "required": [
                      "country_code",
                      "number",
                      "type"
                    ]
                  },
                  "income": {
                    "description": "Amount defines a transaction amount.<br />",
                    "type": "object",
                    "title": "income of the individual cutomer",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  },
                  "income_type": {
                    "description": "income type of the individual cutomer<br />Must be UPPERCASE character<br />",
                    "type": "string",
                    "title": ""
                  },
                  "work_description": {
                    "description": "work description of the individual cutomer<br />",
                    "type": "string",
                    "title": ""
                  },
                  "tin": {
                    "description": "tin of the individual cutomer<br />",
                    "type": "string",
                    "title": ""
                  },
                  "sss": {
                    "description": "sss of the individual cutomer<br />",
                    "type": "string",
                    "title": ""
                  },
                  "customer_risk_level": {
                    "description": "customer risk_level of the individual cutomer<br />Must be UPPERCASE character<br />",
                    "type": "string",
                    "title": ""
                  },
                  "phone_numbers": {
                    "description": "phone numbers of the individual cutomer<br />Limited to 0-4 phone numbers<br />",
                    "type": "array",
                    "title": ""
                  },
                  "credit_line_allowed": {
                    "description": "creditLineAllowed of the individual cutomer<br />",
                    "type": "boolean",
                    "title": ""
                  }
                },
                "required": [
                  "customer_id"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/customer/kyc": {
      "get": {
        "description": "Allows you to retrieve the list of valid values for the Perform KYC Document Upload API parameters that require a specific set of values.",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Retrieve KYC Document Types",
        "operationId": "Account-As-A-Service_RetrieveKYCDocumentTypes",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "document_type": {
                      "additionalProperties": {
                        "properties": {
                          "code": {
                            "title": "The valid value/code of a specific parameter",
                            "type": "string"
                          },
                          "name": {
                            "title": "The descriptive name of the valid value/code of a specific parameter",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "title": "The container for the list of codes of a specific parameter",
                      "type": "object"
                    },
                    "id_status": {
                      "additionalProperties": {
                        "properties": {
                          "code": {
                            "title": "The valid value/code of a specific parameter",
                            "type": "string"
                          },
                          "name": {
                            "title": "The descriptive name of the valid value/code of a specific parameter",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "title": "The container for the list of codes of a specific parameter",
                      "type": "object"
                    },
                    "id_type": {
                      "additionalProperties": {
                        "properties": {
                          "code": {
                            "title": "The valid value/code of a specific parameter",
                            "type": "string"
                          },
                          "name": {
                            "title": "The descriptive name of the valid value/code of a specific parameter",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "title": "The container for the list of codes of a specific parameter",
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 7,
                    "message": "permission denied"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/customers": {
      "get": {
        "description": "Allows you to quickly verify the existence of an Individual/Corporate customer profile (CIF) that you’ve created.",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Verify Customer Existence",
        "operationId": "Account-As-A-Service_VerifyCustomerExistence",
        "parameters": [
          {
            "description": "First Name of the customer.<br />",
            "in": "query",
            "name": "first_name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Middle Name of the customer.<br />",
            "in": "query",
            "name": "middle_name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Last Name of the customer.<br />",
            "in": "query",
            "name": "last_name",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "description": "Date of birth in the format 'YYYY-MM-DD'.<br />",
            "in": "query",
            "name": "dob",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "active": {
                      "title": "Indicates if the customer is active or not",
                      "type": "boolean"
                    },
                    "exists": {
                      "description": "Indicates if the customer exists or not.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 5,
                    "message": "customer not found"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/health/{service_name}": {
      "get": {
        "description": "Allows you to check the system status of the PESONet, Instapay, and Netbank-to-Netbank Fund Transfer service.",
        "tags": [
          "Disburse-To-Account"
        ],
        "summary": "Check the Health of the Disbursement Service",
        "operationId": "Disburse-To-Account_CheckTheHealthOfTheDisbursementService",
        "parameters": [
          {
            "description": "Name of the service that you want to check.<br />",
            "in": "path",
            "name": "service_name",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "status": "UP",
                    "system_date": "2021-12-05T18:31:32.000Z",
                    "target": "PESONET"
                  },
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "system_date": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 13,
                    "message": "failed to get health status"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/inputs": {
      "get": {
        "description": "Allows you to retrieve the list of valid values for the Create Customer API parameters that require a specific set of values",
        "tags": [
          "Account-As-A-Service"
        ],
        "summary": "Retrieve Customer Record Library",
        "operationId": "Account-As-A-Service_RetrieveCustomerRecordLibrary",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "types": {
                      "civil_status": {
                        "codes": {
                          "DIVORCED": {
                            "description": "Divorced"
                          },
                          "MARRIED": {
                            "description": "Married"
                          },
                          "SEPARATED": {
                            "description": "Separated"
                          },
                          "SINGLE": {
                            "description": "Single"
                          },
                          "WIDOWED": {
                            "description": "Widowed"
                          },
                          "WITH_COMMON_LAW_PARTNER": {
                            "description": "With common law partner"
                          }
                        }
                      },
                      "gender": {
                        "codes": {
                          "FEMALE": {
                            "description": "Female"
                          },
                          "MALE": {
                            "description": "Male"
                          }
                        }
                      }
                    }
                  },
                  "properties": {
                    "types": {
                      "additionalProperties": {
                        "properties": {
                          "codes": {
                            "additionalProperties": {
                              "properties": {
                                "description": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 7,
                    "message": "permission denied"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/loan": {
      "post": {
        "description": "Create a customer loan.",
        "tags": [
          "Loan"
        ],
        "summary": "Create Loan",
        "operationId": "LoanService_CreateLoan",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "account_number": {
                      "description": "The actual account number of the loan record.",
                      "type": "string"
                    },
                    "status": {
                      "title": "The actual status of the loan record",
                      "type": "string"
                    },
                    "transaction_id": {
                      "description": "Release transaciton identifier. Included when release method generates a transaction entry.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "customer_id": {
                    "description": "The id that is associated by our banking platform<br />to the individual or corporate/business customer record.<br />The customer_id is returned by the successful response of either<br />the Create Customer API or Create Corporate Customer API.<br />The value must be a valid customer_id that exists within your branch.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "issuance_type": {
                    "description": "The type of loan issuance to process.<br />The value ust be a valid issuance_type from the Retrieve Loan Options Library API.<br />",
                    "type": "string",
                    "title": "",
                    "enum": [
                      "UNKNOWN",
                      "IssueNew"
                    ]
                  },
                  "loan_type": {
                    "description": "The type of loan to issue.<br />The value must be a valid loan_type from the Retrieve Loan Options Library API.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "principal_amount": {
                    "description": "The amount of money to be borrowed<br />Required if the issuance_type is not “RESTRUCTURED\"<br />The value must be a positive number.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  },
                  "credit_line": {
                    "description": "Identifier of credit line to associate with the loan.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "attach_documents": {
                    "description": "Attach submitted documents to the loan.<br />",
                    "type": "array",
                    "title": ""
                  },
                  "reference_id": {
                    "description": "API User’s own unique reference code.<br />Limited to 0-36 characters.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "schedule_code": {
                    "description": "Schedule of repayment installments.<br />See installment schedule list in loan options for available schedules.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "amortization_count": {
                    "description": "Total number of planned installments in the full repayment schedule.<br />",
                    "type": "integer",
                    "title": ""
                  },
                  "interest_rate": {
                    "description": "Annual interest rate applied to the loan interest accrual calculations.<br />Format as a decimal with up to five fractional digits (14.54323% => \"14.54323\").<br />",
                    "type": "string",
                    "title": ""
                  },
                  "amortization_due": {
                    "description": "First installment due date.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "day": {
                        "description": "Day between 1 and 31.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "month": {
                        "description": "Month between 1 and 12.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "year": {
                        "description": "Calendar year between 0 and 9999.<br />",
                        "type": "integer",
                        "title": ""
                      }
                    }
                  },
                  "loan_officer": {
                    "description": "TODO: clarify this field more than \"existing customer id\" so a partner developer knows what it means.<br />",
                    "type": "string",
                    "title": "The id that is associated by our banking platform\nto the individual or corporate/business customer record.\nThe customer_id is returned by the successful response of either\nthe Create Customer API or Create Corporate Customer API.\nThe value must be the customer_id of the Netbank Client calling the Create Loan API"
                  },
                  "loan_collector": {
                    "description": "TODO: clarify this field more than \"existing customer id\" so a partner developer knows what it means.<br />",
                    "type": "string",
                    "title": "The id that is associated by our banking platform\nto the individual or corporate/business customer record.\nThe customer_id is returned by the successful response of either\nthe Create Customer API or Create Corporate Customer API.\nThe value must be the customer_id of the Netbank Client calling the Create Loan API"
                  },
                  "linked_account": {
                    "description": "Register an account for auto-debit on the installment due date.<br />This account must be owned by the borrower.<br />Deprecated:  Use<br />",
                    "type": "string",
                    "title": ""
                  },
                  "co_signer": {
                    "description": "Customer ids of loan cosigners.<br />Must be a valid customer_id that exists within your branch.<br />",
                    "type": "array",
                    "title": ""
                  },
                  "remarks": {
                    "description": "Additional remarks/comment on the loan<br />",
                    "type": "string",
                    "title": ""
                  },
                  "release_option": {
                    "description": "Options for fund release.  Default general ledger.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "method": {
                        "description": " - GeneralLedger: Release using general ledger credit.<br /> - DepositAccount: Release to a customer account as a credit transaction.<br />",
                        "type": "string",
                        "title": "Method of release",
                        "enum": [
                          "UnknownRelease",
                          "GeneralLedger",
                          "DepositAccount"
                        ]
                      },
                      "account_number": {
                        "description": "Account Number destination for funds.  Required for Method \"DepositAccount\".<br />",
                        "type": "string",
                        "title": ""
                      }
                    },
                    "required": [
                      "method"
                    ]
                  }
                },
                "required": [
                  "customer_id",
                  "issuance_type",
                  "loan_type",
                  "principal_amount",
                  "schedule_code",
                  "amortization_count",
                  "interest_rate"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/loan-interbank": {
      "post": {
        "description": "",
        "tags": [
          "Loan"
        ],
        "summary": "Create Loan interbank",
        "operationId": "LoanService_CreateLoanInterbank",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "account_number": {
                      "description": "The actual account number of the loan record.",
                      "type": "string"
                    },
                    "fund_transfer": {
                      "description": "Seamless fund transfers for loans for Release Method \"Interbank\".",
                      "properties": {
                        "message": {
                          "description": "Detailed status message in the case of processing error.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the transaction request.",
                          "type": "string"
                        },
                        "transaction_id": {
                          "description": "The id that is associated by our platform to the disbursement transaction.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "title": "The actual status of the loan record",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "customer_id": {
                    "description": "The id that is associated by our banking platform<br />to the individual or corporate/business customer record.<br />The customer_id is returned by the successful response of either<br />the Create Customer API or Create Corporate Customer API.<br />The value must be a valid customer_id that exists within your branch.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "issuance_type": {
                    "description": "The type of loan issuance to process.<br />The value ust be a valid issuance_type from the Retrieve Loan Options Library API.<br />",
                    "type": "string",
                    "title": "",
                    "enum": [
                      "UNKNOWN",
                      "IssueNew"
                    ]
                  },
                  "loan_type": {
                    "description": "The type of loan to issue.<br />The value must be a valid loan_type from the Retrieve Loan Options Library API.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "principal_amount": {
                    "description": "The amount of money to be borrowed<br />Required if the issuance_type is not “RESTRUCTURED\"<br />The value must be a positive number.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  },
                  "credit_line": {
                    "description": "Identifier of credit line to associate with the loan.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "attach_documents": {
                    "description": "Attach submitted documents to the loan.<br />",
                    "type": "array",
                    "title": ""
                  },
                  "reference_id": {
                    "description": "API User’s own unique reference code.<br />Limited to 0-36 characters.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "schedule_code": {
                    "description": "Schedule of repayment installments.<br />See installment schedule list in loan options for available schedules.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "amortization_count": {
                    "description": "Total number of planned installments in the full repayment schedule.<br />",
                    "type": "integer",
                    "title": ""
                  },
                  "interest_rate": {
                    "description": "Annual interest rate applied to the loan interest accrual calculations.<br />Format as a decimal with up to five fractional digits (14.54323% => \"14.54323\").<br />",
                    "type": "string",
                    "title": ""
                  },
                  "amortization_due": {
                    "description": "First installment due date.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "day": {
                        "description": "Day between 1 and 31.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "month": {
                        "description": "Month between 1 and 12.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "year": {
                        "description": "Calendar year between 0 and 9999.<br />",
                        "type": "integer",
                        "title": ""
                      }
                    }
                  },
                  "loan_officer": {
                    "description": "The id that is associated by our banking platform<br />to the individual or corporate/business customer record.<br />The customer_id is returned by the successful response of either<br />the Create Customer API or Create Corporate Customer API.<br />The value must be the customer_id of the Netbank Client calling the Create Loan API<br />",
                    "type": "string",
                    "title": ""
                  },
                  "loan_collector": {
                    "description": "The id that is associated by our banking platform<br />to the individual or corporate/business customer record.<br />The customer_id is returned by the successful response of either<br />the Create Customer API or Create Corporate Customer API.<br />The value must be the customer_id of the Netbank Client calling the Create Loan API<br />",
                    "type": "string",
                    "title": ""
                  },
                  "linked_account": {
                    "description": "Register an account for auto-debit on the installment due date.<br />This account must be owned by the borrower.<br />Deprecated:  Use<br />",
                    "type": "string",
                    "title": ""
                  },
                  "co_signer": {
                    "description": "Customer ids of loan cosigners.<br />Must be a valid customer_id that exists within your branch.<br />",
                    "type": "array",
                    "title": ""
                  },
                  "remarks": {
                    "description": "Additional remarks/comment on the loan<br />",
                    "type": "string",
                    "title": ""
                  },
                  "transfer": {
                    "description": "Transfer details<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "destination_account_name": {
                        "description": "<br />",
                        "type": "string",
                        "title": ""
                      },
                      "destination_account_number": {
                        "description": "<br />",
                        "type": "string",
                        "title": ""
                      },
                      "destination_bic": {
                        "description": "<br />",
                        "type": "string",
                        "title": ""
                      },
                      "settlement_rail": {
                        "description": "<br />",
                        "type": "string",
                        "title": ""
                      },
                      "source_account_number": {
                        "description": "<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  }
                },
                "required": [
                  "customer_id",
                  "issuance_type",
                  "loan_type",
                  "principal_amount",
                  "schedule_code",
                  "amortization_count",
                  "interest_rate",
                  "transfer"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/loan/{account_number}": {
      "get": {
        "description": "Get loan information using the loan account number",
        "tags": [
          "Loan"
        ],
        "summary": "Retrieve Loan Information",
        "operationId": "LoanService_GetLoan",
        "parameters": [
          {
            "description": "<br />",
            "in": "path",
            "name": "account_number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "account_number": {
                      "type": "string"
                    },
                    "accrual_limit": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "accrual_period": {
                      "type": "string"
                    },
                    "accrued_interest": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "advance_interest_amount": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "advance_interest_application": {
                      "type": "string"
                    },
                    "advance_interest_no": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "allow_accrual": {
                      "type": "boolean"
                    },
                    "amortization_schedule": {
                      "properties": {
                        "list": {
                          "items": {
                            "properties": {
                              "amortization_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "amortization_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "amortized_fees": {
                                "items": {
                                  "properties": {
                                    "amortization_line_number": {
                                      "format": "int32",
                                      "type": "integer"
                                    },
                                    "amount": {
                                      "description": "Amount defines a transaction amount.",
                                      "properties": {
                                        "cur": {
                                          "description": "ISO-4217 currency 3-character code.",
                                          "type": "string"
                                        },
                                        "num": {
                                          "format": "integer",
                                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "balance": {
                                      "description": "Amount defines a transaction amount.",
                                      "properties": {
                                        "cur": {
                                          "description": "ISO-4217 currency 3-character code.",
                                          "type": "string"
                                        },
                                        "num": {
                                          "format": "integer",
                                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "fee_definition_id": {
                                      "format": "int64",
                                      "type": "string"
                                    },
                                    "fee_id": {
                                      "format": "int64",
                                      "type": "string"
                                    },
                                    "id": {
                                      "format": "int64",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "as_earned_interest_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "as_earned_interest_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "cbu_charge_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "cbu_charge_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "custom_fees_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "custom_fees_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "date_paid": {
                                "properties": {
                                  "day": {
                                    "description": "Day between 1 and 31.",
                                    "format": "int32",
                                    "maximum": 31,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "month": {
                                    "description": "Month between 1 and 12.",
                                    "format": "int32",
                                    "maximum": 12,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "year": {
                                    "description": "Calendar year between 0 and 9999.",
                                    "format": "int32",
                                    "maximum": 9999,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "days_late": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "due_date": {
                                "type": "string"
                              },
                              "id": {
                                "format": "int64",
                                "type": "string"
                              },
                              "interest_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "interest_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "last_added_past_due_interest_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "last_added_penalty_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "last_past_due_interest_applied_date": {
                                "properties": {
                                  "day": {
                                    "description": "Day between 1 and 31.",
                                    "format": "int32",
                                    "maximum": 31,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "month": {
                                    "description": "Month between 1 and 12.",
                                    "format": "int32",
                                    "maximum": 12,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "year": {
                                    "description": "Calendar year between 0 and 9999.",
                                    "format": "int32",
                                    "maximum": 9999,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "last_penalty_application_date": {
                                "properties": {
                                  "day": {
                                    "description": "Day between 1 and 31.",
                                    "format": "int32",
                                    "maximum": 31,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "month": {
                                    "description": "Month between 1 and 12.",
                                    "format": "int32",
                                    "maximum": 12,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "year": {
                                    "description": "Calendar year between 0 and 9999.",
                                    "format": "int32",
                                    "maximum": 9999,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "line_number": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "loan_id": {
                                "format": "int64",
                                "type": "string"
                              },
                              "loan_outstanding_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "past_due_interest_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "past_due_interest_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "past_due_maturity_interest_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "past_due_maturity_interest_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "penalty_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "penalty_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "penalty_maturity_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "penalty_maturity_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "pf_charge_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "pf_charge_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "principal_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "principal_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "status": {
                                "type": "string"
                              },
                              "total_past_due_interest_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "total_past_due_interest_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "total_penalty_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "total_penalty_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "tp_charge_amount": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "tp_charge_balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "size": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "total_amount": {
                          "properties": {
                            "cbu_charge": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "custom_fees": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "past_due_interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "past_due_maturity_interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "penalty": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "penalty_maturity": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "pf_charge": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "principal": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "total": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "total_due": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "total_past_due_interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "total_penalty": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "tp_charge": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "uid_interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "total_arrears": {
                          "properties": {
                            "cbu_charge": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "custom_fees": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "past_due_interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "past_due_maturity_interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "penalty": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "penalty_maturity": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "pf_charge": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "principal": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "total": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "total_due": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "total_past_due_interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "total_penalty": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "tp_charge": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "uid_interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "total_balance": {
                          "properties": {
                            "cbu_charge": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "custom_fees": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "past_due_interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "past_due_maturity_interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "penalty": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "penalty_maturity": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "pf_charge": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "principal": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "total": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "total_due": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "total_past_due_interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "total_penalty": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "tp_charge": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "uid_interest": {
                              "description": "Amount defines a transaction amount.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "application_fee": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "application_fee_already_paid": {
                      "type": "boolean"
                    },
                    "as_earned_interest_calculation": {
                      "type": "boolean"
                    },
                    "balance": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "calculated_first_amortization_due_date": {
                      "properties": {
                        "day": {
                          "description": "Day between 1 and 31.",
                          "format": "int32",
                          "maximum": 31,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "month": {
                          "description": "Month between 1 and 12.",
                          "format": "int32",
                          "maximum": 12,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "year": {
                          "description": "Calendar year between 0 and 9999.",
                          "format": "int32",
                          "maximum": 9999,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "category_ids": {
                      "items": {
                        "format": "int64",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "cbu_fund_account_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "cbu_hold_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "cbu_savings_account_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "check_preparation_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "closed_on": {
                      "type": "string"
                    },
                    "co_makers": {
                      "items": {
                        "format": "int64",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "collector_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "comments": {
                      "type": "string"
                    },
                    "created_on": {
                      "type": "string"
                    },
                    "creation_type": {
                      "type": "string"
                    },
                    "credit_investigation_fee": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "credit_investigation_fee_already_paid": {
                      "type": "boolean"
                    },
                    "credit_line_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "customer_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "cycle": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "days_in_year": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "definition_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "dep_ed_income_source_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "dep_ed_policy_number": {
                      "type": "string"
                    },
                    "diminishing_amortization_number": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "discount_charges_ledger": {
                      "properties": {
                        "list": {
                          "items": {
                            "properties": {
                              "accretion_date": {
                                "properties": {
                                  "day": {
                                    "description": "Day between 1 and 31.",
                                    "format": "int32",
                                    "maximum": 31,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "month": {
                                    "description": "Month between 1 and 12.",
                                    "format": "int32",
                                    "maximum": 12,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "year": {
                                    "description": "Calendar year between 0 and 9999.",
                                    "format": "int32",
                                    "maximum": 9999,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "days": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "id": {
                                "format": "int64",
                                "type": "string"
                              },
                              "income": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "line_number": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "loan_id": {
                                "format": "int64",
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "unearned": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_days": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "total_income": {
                          "description": "Amount defines a transaction amount.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "total_unearned_interest": {
                          "description": "Amount defines a transaction amount.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "discount_charges_rate": {
                      "type": "string"
                    },
                    "doc_stamp": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "doc_stamp_already_paid": {
                      "type": "boolean"
                    },
                    "eir_annual": {
                      "type": "string"
                    },
                    "eir_monthly": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "eir_periodic": {
                      "type": "string"
                    },
                    "extra_bank_fee": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "extra_bank_fee_already_paid": {
                      "type": "boolean"
                    },
                    "extra_number": {
                      "type": "string"
                    },
                    "first_amortization_due_date": {
                      "properties": {
                        "day": {
                          "description": "Day between 1 and 31.",
                          "format": "int32",
                          "maximum": 31,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "month": {
                          "description": "Month between 1 and 12.",
                          "format": "int32",
                          "maximum": 12,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "year": {
                          "description": "Calendar year between 0 and 9999.",
                          "format": "int32",
                          "maximum": 9999,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "grace_period": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "grant_date": {
                      "properties": {
                        "day": {
                          "description": "Day between 1 and 31.",
                          "format": "int32",
                          "maximum": 31,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "month": {
                          "description": "Month between 1 and 12.",
                          "format": "int32",
                          "maximum": 12,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "year": {
                          "description": "Calendar year between 0 and 9999.",
                          "format": "int32",
                          "maximum": 9999,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "gross_eir_annual": {
                      "type": "string"
                    },
                    "gross_eir_periodic": {
                      "type": "string"
                    },
                    "group_loan_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "group_loan_name": {
                      "type": "string"
                    },
                    "holds_balance": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "id_fee": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id_fee_already_paid": {
                      "type": "boolean"
                    },
                    "insurance_fee": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "insurance_fee_already_paid": {
                      "type": "boolean"
                    },
                    "insurance_processing_fee": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "insurance_processing_fee_already_paid": {
                      "type": "boolean"
                    },
                    "insurance_service_fee": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "insurance_service_fee_already_paid": {
                      "type": "boolean"
                    },
                    "interest_amount": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "interest_balance": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "interest_calculation_parameter": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "interest_rate": {
                      "type": "string"
                    },
                    "interest_type": {
                      "type": "string"
                    },
                    "last_accrual_date": {
                      "properties": {
                        "day": {
                          "description": "Day between 1 and 31.",
                          "format": "int32",
                          "maximum": 31,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "month": {
                          "description": "Month between 1 and 12.",
                          "format": "int32",
                          "maximum": 12,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "year": {
                          "description": "Calendar year between 0 and 9999.",
                          "format": "int32",
                          "maximum": 9999,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "last_customer_transaction": {
                      "type": "string"
                    },
                    "last_transaction": {
                      "type": "string"
                    },
                    "late_check_awaiting_amount": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "latest_irreversible_operation": {
                      "format": "int64",
                      "type": "string"
                    },
                    "linked_deposit_account_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "loan_documents": {
                      "items": {
                        "properties": {
                          "document_number": {
                            "type": "string"
                          },
                          "document_type": {
                            "type": "string"
                          },
                          "file_id": {
                            "format": "int64",
                            "type": "string"
                          },
                          "id": {
                            "format": "int64",
                            "type": "string"
                          },
                          "loan_id": {
                            "format": "int64",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "remarks": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "loan_information": {
                      "properties": {
                        "cic_contract_type": {
                          "type": "string"
                        },
                        "loan_borrower_type": {
                          "type": "string"
                        },
                        "loan_class": {
                          "type": "string"
                        },
                        "loan_economic_activity": {
                          "type": "string"
                        },
                        "loan_industry_purpose": {
                          "type": "string"
                        },
                        "loan_microfinance_classification": {
                          "type": "string"
                        },
                        "loan_microfinance_client_type": {
                          "type": "string"
                        },
                        "loan_purpose": {
                          "type": "string"
                        },
                        "loan_rate_type": {
                          "type": "string"
                        },
                        "loan_security": {
                          "type": "string"
                        },
                        "loan_transaction_type": {
                          "type": "string"
                        },
                        "mis_group": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "loss_allowance": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "mapping_attributes": {
                      "properties": {
                        "mis_code": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "restructured": {
                          "type": "boolean"
                        },
                        "written_off": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "maturity_date": {
                      "properties": {
                        "day": {
                          "description": "Day between 1 and 31.",
                          "format": "int32",
                          "maximum": 31,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "month": {
                          "description": "Month between 1 and 12.",
                          "format": "int32",
                          "maximum": 12,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "year": {
                          "description": "Calendar year between 0 and 9999.",
                          "format": "int32",
                          "maximum": 9999,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "membership_fee": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "membership_fee_already_paid": {
                      "type": "boolean"
                    },
                    "metadata": {
                      "properties": {
                        "impaired": {
                          "type": "boolean"
                        },
                        "litigation": {
                          "type": "boolean"
                        },
                        "manual_metadata": {
                          "type": "boolean"
                        },
                        "past_due_classification": {
                          "type": "string"
                        },
                        "performance": {
                          "type": "string"
                        },
                        "provision_rate": {
                          "type": "string"
                        },
                        "restructured": {
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    },
                    "monthly_interest_rate": {
                      "type": "string"
                    },
                    "negative_information": {
                      "properties": {
                        "negative_information_id": {
                          "format": "int64",
                          "type": "string"
                        },
                        "probability_of_default": {
                          "type": "string"
                        },
                        "remarks": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notarial_fee": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "notarial_fee_alreadyPaid": {
                      "type": "boolean"
                    },
                    "officer_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "opening_deductions": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "origin": {
                      "type": "string"
                    },
                    "override_amortization_amount": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "past_due_interest_charge": {
                      "properties": {
                        "rate": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "past_due_maturity_interest_charge": {
                      "properties": {
                        "rate": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "payment_interval_definition": {
                      "properties": {
                        "accrual_limit": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "base_payment_interval": {
                          "type": "string"
                        },
                        "cic_payment_periodicity": {
                          "type": "string"
                        },
                        "id": {
                          "format": "int64",
                          "type": "string"
                        },
                        "interval_count": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "midas_payment_periodicity": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "payment_days": {
                          "items": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "type": "array"
                        },
                        "payment_interval_type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "penalty_maturity": {
                      "properties": {
                        "rate": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "penalty_maturity_collection_type": {
                      "type": "string"
                    },
                    "pf_hold_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "pf_savings_account_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "principal_amount": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "principal_balance": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "release_allowed_date": {
                      "properties": {
                        "day": {
                          "description": "Day between 1 and 31.",
                          "format": "int32",
                          "maximum": 31,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "month": {
                          "description": "Month between 1 and 12.",
                          "format": "int32",
                          "maximum": 12,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "year": {
                          "description": "Calendar year between 0 and 9999.",
                          "format": "int32",
                          "maximum": 9999,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "release_amount": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "release_date": {
                      "properties": {
                        "day": {
                          "description": "Day between 1 and 31.",
                          "format": "int32",
                          "maximum": 31,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "month": {
                          "description": "Month between 1 and 12.",
                          "format": "int32",
                          "maximum": 12,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "year": {
                          "description": "Calendar year between 0 and 9999.",
                          "format": "int32",
                          "maximum": 9999,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "remade_from_loan_ids": {
                      "items": {
                        "format": "int64",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "remade_to": {
                      "format": "int64",
                      "type": "string"
                    },
                    "renewed_loan_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "service_charge": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "service_charge_already_paid": {
                      "type": "boolean"
                    },
                    "simulated_amortized_fees": {
                      "items": {
                        "properties": {
                          "amortization_line_number": {
                            "format": "int32",
                            "type": "integer"
                          },
                          "amount": {
                            "description": "Amount defines a transaction amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "balance": {
                            "description": "Amount defines a transaction amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "fee_definition_id": {
                            "format": "int64",
                            "type": "string"
                          },
                          "fee_id": {
                            "format": "int64",
                            "type": "string"
                          },
                          "id": {
                            "format": "int64",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "simulated_fees": {
                      "items": {
                        "properties": {
                          "amount": {
                            "description": "Amount defines a transaction amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "applied_date": {
                            "properties": {
                              "day": {
                                "description": "Day between 1 and 31.",
                                "format": "int32",
                                "maximum": 31,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "month": {
                                "description": "Month between 1 and 12.",
                                "format": "int32",
                                "maximum": 12,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "year": {
                                "description": "Calendar year between 0 and 9999.",
                                "format": "int32",
                                "maximum": 9999,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "apply_on": {
                            "type": "string"
                          },
                          "apply_predicates": {
                            "items": {
                              "properties": {
                                "compare_mode": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "balance": {
                            "description": "Amount defines a transaction amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "bank_expense": {
                            "type": "boolean"
                          },
                          "created_date": {
                            "type": "string"
                          },
                          "fee_definition_id": {
                            "format": "int64",
                            "type": "string"
                          },
                          "for_accretion": {
                            "type": "boolean"
                          },
                          "id": {
                            "format": "int64",
                            "type": "string"
                          },
                          "operation_id": {
                            "format": "int64",
                            "type": "string"
                          },
                          "original_amount": {
                            "description": "Amount defines a transaction amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "original_percentage": {
                            "type": "string"
                          },
                          "paid_upfront": {
                            "type": "boolean"
                          },
                          "percentage": {
                            "type": "string"
                          },
                          "product_id": {
                            "format": "int64",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "status": {
                      "type": "string"
                    },
                    "term": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "term_adjustment": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "total_amortization_number": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "total_default_fees": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "tp_hold_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "tp_savings_account_id": {
                      "format": "int64",
                      "type": "string"
                    },
                    "type": {
                      "format": "int64",
                      "type": "string"
                    },
                    "uid_amortization_number": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "uid_application": {
                      "type": "string"
                    },
                    "uid_ledger": {
                      "properties": {
                        "list": {
                          "items": {
                            "properties": {
                              "balance": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "date": {
                                "properties": {
                                  "day": {
                                    "description": "Day between 1 and 31.",
                                    "format": "int32",
                                    "maximum": 31,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "month": {
                                    "description": "Month between 1 and 12.",
                                    "format": "int32",
                                    "maximum": 12,
                                    "minimum": 1,
                                    "type": "integer"
                                  },
                                  "year": {
                                    "description": "Calendar year between 0 and 9999.",
                                    "format": "int32",
                                    "maximum": 9999,
                                    "type": "integer"
                                  }
                                },
                                "type": "object"
                              },
                              "days": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "id": {
                                "format": "int64",
                                "type": "string"
                              },
                              "income": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "line_number": {
                                "format": "int32",
                                "type": "integer"
                              },
                              "loan_id": {
                                "format": "int64",
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "unearned_interest": {
                                "description": "Amount defines a transaction amount.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "total_days": {
                          "format": "int32",
                          "type": "integer"
                        },
                        "total_income": {
                          "description": "Amount defines a transaction amount.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "total_unearned_interest": {
                          "description": "Amount defines a transaction amount.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "write_off_date": {
                      "properties": {
                        "day": {
                          "description": "Day between 1 and 31.",
                          "format": "int32",
                          "maximum": 31,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "month": {
                          "description": "Month between 1 and 12.",
                          "format": "int32",
                          "maximum": 12,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "year": {
                          "description": "Calendar year between 0 and 9999.",
                          "format": "int32",
                          "maximum": 9999,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/loan/{customer_id}/creditline": {
      "get": {
        "description": "List all available lines of credit for a customer.",
        "tags": [
          "Loan"
        ],
        "summary": "List Credit Lines",
        "operationId": "CreditLineService_ListCreditLine",
        "parameters": [
          {
            "description": "The id that is associated by our banking platform<br />to the individual or corporate/business customer record.<br />The customer_id is returned by the successful response of either<br />the Create Customer API or Create Corporate Customer API.<br />Must be a valid customer_id that exists within your branch.<br />",
            "in": "path",
            "name": "customer_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "available_credit": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "credit_lines": {
                      "description": "Customer lines of credit.",
                      "items": {
                        "properties": {
                          "available_credit": {
                            "description": "Amount defines a transaction amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "closed_date": {
                            "description": "Closed date of the credit line.",
                            "properties": {
                              "day": {
                                "description": "Day between 1 and 31.",
                                "format": "int32",
                                "maximum": 31,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "month": {
                                "description": "Month between 1 and 12.",
                                "format": "int32",
                                "maximum": 12,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "year": {
                                "description": "Calendar year between 0 and 9999.",
                                "format": "int32",
                                "maximum": 9999,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "credit_line": {
                            "description": "Amount defines a transaction amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "credit_line_id": {
                            "description": "Identifier of the line of credit.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Credit line description.",
                            "type": "string"
                          },
                          "expiration_date": {
                            "description": "Expiration date of the credit.",
                            "properties": {
                              "day": {
                                "description": "Day between 1 and 31.",
                                "format": "int32",
                                "maximum": 31,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "month": {
                                "description": "Month between 1 and 12.",
                                "format": "int32",
                                "maximum": 12,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "year": {
                                "description": "Calendar year between 0 and 9999.",
                                "format": "int32",
                                "maximum": 9999,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "grant_date": {
                            "description": "Grant date of the line of credit.",
                            "properties": {
                              "day": {
                                "description": "Day between 1 and 31.",
                                "format": "int32",
                                "maximum": 31,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "month": {
                                "description": "Month between 1 and 12.",
                                "format": "int32",
                                "maximum": 12,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "year": {
                                "description": "Calendar year between 0 and 9999.",
                                "format": "int32",
                                "maximum": 9999,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "loan_types": {
                            "description": "Allowed loan types that can use this credit line.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "replenishment_type": {
                            "default": "Revolving",
                            "description": "Credit replenishment pattern.",
                            "enum": [
                              "Revolving",
                              "NonRevolving"
                            ],
                            "type": "string"
                          },
                          "status": {
                            "default": "Active",
                            "description": "Current status of the credit line.",
                            "enum": [
                              "Active",
                              "Expired",
                              "Blocked",
                              "Closed"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "customer_id": {
                      "description": "The id that is associated by our banking platform\nto the individual or corporate/business customer record.\nThe customer_id is returned by the successful response of either\nthe Create Customer API or Create Corporate Customer API.\nMust be a valid customer_id that exists within your branch.",
                      "type": "string"
                    },
                    "total_credit": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/loan/{loan_account_number}/payment": {
      "post": {
        "description": "Process immediate payment on a loan.",
        "tags": [
          "Loan"
        ],
        "summary": "Process Loan Payment",
        "operationId": "LoanService_PayLoan",
        "parameters": [
          {
            "description": "The account number that was returned by the Create Loan endpoint.<br />Must be a valid loan account number.<br />",
            "in": "path",
            "name": "loan_account_number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "transaction_id": {
                      "description": "Payment transaction identifier.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "reference_id": {
                    "description": "API User’s own unique reference code.<br />Limited to 0-36 characters.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "bank_account_number": {
                    "description": "Netbank Bank Account Number where the funds will be drawn/debited from to pay the loan.<br />Must be a valid Netbank account number with dash (e.g. 005-0010-00032-2) that you have created.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "loan_account_number": {
                    "description": "The account number that was returned by the Create Loan endpoint.<br />Must be a valid loan account number.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "receipt_type": {
                    "description": "Type of receipt issued to customer for payment records.<br />",
                    "type": "string",
                    "title": "",
                    "enum": [
                      "TemporaryReceipt",
                      "OfficialReceipt"
                    ]
                  },
                  "receipt_number": {
                    "description": "Receipt identifier.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "remarks": {
                    "description": "Payment remarks.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "amount": {
                    "description": "Amount defines a transaction amount.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  }
                },
                "required": [
                  "bank_account_number",
                  "loan_account_number",
                  "receipt_type",
                  "receipt_number",
                  "amount"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/loan/creditline": {
      "post": {
        "description": "Create a line of credit for a customer.",
        "tags": [
          "Loan"
        ],
        "summary": "Create Credit Line",
        "operationId": "CreditLineService_CreateCreditLine",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "credit_line_id": {
                      "description": "Identifier of the created line of credit.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "customer_id": {
                    "description": "The id that is associated by our banking platform<br />to the individual or corporate/business customer record.<br />The customer_id is returned by the successful response of either<br />the Create Customer API or Create Corporate Customer API.<br />Must be a valid customer_id that exists within your branch.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "credit_line": {
                    "description": "Approved credit line amount.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  },
                  "loan_types": {
                    "description": "Allowed loan types that can use this credit line.<br />",
                    "type": "array",
                    "title": ""
                  },
                  "description": {
                    "description": "Credit line description.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "grant_date": {
                    "description": "Grant date of the line of credit.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "day": {
                        "description": "Day between 1 and 31.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "month": {
                        "description": "Month between 1 and 12.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "year": {
                        "description": "Calendar year between 0 and 9999.<br />",
                        "type": "integer",
                        "title": ""
                      }
                    }
                  },
                  "expiration_date": {
                    "description": "Expiration date of the credit.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "day": {
                        "description": "Day between 1 and 31.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "month": {
                        "description": "Month between 1 and 12.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "year": {
                        "description": "Calendar year between 0 and 9999.<br />",
                        "type": "integer",
                        "title": ""
                      }
                    }
                  },
                  "replenishment": {
                    "description": "Credit replenishment pattern.<br />",
                    "type": "string",
                    "title": "",
                    "enum": [
                      "Revolving",
                      "NonRevolving"
                    ]
                  }
                },
                "required": []
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/loan/options": {
      "get": {
        "description": "Available loans and repayment schedules for creating loans.",
        "tags": [
          "Loan"
        ],
        "summary": "Loan Options",
        "operationId": "LoanService_GetLoanOptions",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Loan options available.",
                  "properties": {
                    "available_loans": {
                      "additionalProperties": {
                        "properties": {
                          "active": {
                            "description": "Loan type is active.  Inactive loan types cannot be issued.",
                            "type": "boolean"
                          },
                          "code": {
                            "description": "Loan type code.",
                            "type": "string"
                          },
                          "credit_line": {
                            "description": "Loan is allowed to be issued using a credit line.",
                            "type": "boolean"
                          },
                          "description": {
                            "description": "Loan description.",
                            "type": "string"
                          },
                          "installment_schedule_options": {
                            "description": "Available installment schedule.",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "loan_defaults": {
                            "description": "Default issuance parameters.",
                            "properties": {
                              "installment_count": {
                                "description": "Default installment count for the loan term.",
                                "format": "int32",
                                "type": "integer"
                              },
                              "interest_rate": {
                                "description": "Default interest rate applied to the loan.",
                                "type": "string"
                              },
                              "issuance": {
                                "description": "Default issuance type.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "max_amount": {
                            "description": "Maximum allowed loan principal amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "max_interest": {
                            "description": "Maximum allowed loan interest.",
                            "type": "string"
                          },
                          "max_term": {
                            "description": "Maximum allowed loan term.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "min_amount": {
                            "description": "Minimum allowed loan principal amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "min_interest": {
                            "description": "Minimum allowed loan interest.",
                            "type": "string"
                          },
                          "min_term": {
                            "description": "Minimum allowed loan term.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Loan name.",
                            "type": "string"
                          },
                          "purpose": {
                            "description": "Default Loan Purpose.",
                            "type": "string"
                          },
                          "renewal_threshold": {
                            "description": "Princial threshold for loan renewal.\nAt least this amount of the original principal must be paid off before renewal is allowed.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "title": "List of Available Loan",
                      "type": "object"
                    },
                    "installment_schedule": {
                      "additionalProperties": {
                        "properties": {
                          "accrual_limit": {
                            "description": "Limit on number of interest accruals that may happen per installment interval.",
                            "format": "int32",
                            "type": "integer"
                          },
                          "code": {
                            "description": "Identifier code for the schedule.",
                            "type": "string"
                          },
                          "interval": {
                            "description": "Time interval for installment.\nSchedule will be an interval or set day(s) each month.",
                            "properties": {
                              "installments": {
                                "description": "Number of installments within the time interval.\nExample: twice monthly would be \"2\" installments with a time interval of \"Month\".",
                                "format": "int32",
                                "type": "integer"
                              },
                              "time_interval": {
                                "description": "Calendar time interval.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "name": {
                            "description": "Descriptive name of the installment schedule.",
                            "type": "string"
                          },
                          "payment_days": {
                            "description": "Day of the month for installment.\nSchedule will be an interval or set day(s) each month.",
                            "items": {
                              "format": "int32",
                              "type": "integer"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object"
                      },
                      "title": "List of Installment Schedule",
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/loan/payment/{transaction_id}": {
      "get": {
        "description": "Allows you to retrieve the details of a loan payment transaction that you’ve triggered.",
        "tags": [
          "Loan"
        ],
        "summary": "Retrieve Loan Payment Transaction Details",
        "operationId": "LoanService_GetPayment",
        "parameters": [
          {
            "description": "Transaction identifier.<br />",
            "in": "path",
            "name": "transaction_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "transaction": {
                      "properties": {
                        "amount": {
                          "description": "Payment amount.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "customer_id": {
                          "description": "Customer associated with loan account.",
                          "type": "string"
                        },
                        "date": {
                          "description": "Payment date.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "loan_account": {
                          "description": "Loan account.",
                          "type": "string"
                        },
                        "method": {
                          "description": "Method of payment.",
                          "type": "string"
                        },
                        "outstanding_balance": {
                          "description": "Oustanding balance after installment is applied.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "overpayment": {
                          "description": "Oustanding balance after installment is applied.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "payment_allocation": {
                          "description": "Payment allocation breakdown.",
                          "properties": {
                            "accrued_interest_paid": {
                              "description": "Accrued Interest amount paid in this installment.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "interest_advance": {
                              "description": "Interest paid in advance by this payment.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "interest_due": {
                              "description": "Interest due at time of payment.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "interest_paid": {
                              "description": "Interest amount paid in this installment.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "interest_past_due": {
                              "description": "Interest past due date at time of payment.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "principal_advance": {
                              "description": "Principal paid in advance by this payment.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "principal_due": {
                              "description": "Principal due at time of payment.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "principal_paid": {
                              "description": "Principal amount paid in this installment.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "principal_past_due": {
                              "description": "Principal past due date at time of payment.",
                              "properties": {
                                "cur": {
                                  "description": "ISO-4217 currency 3-character code.",
                                  "type": "string"
                                },
                                "num": {
                                  "format": "integer",
                                  "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "source_account": {
                          "description": "Transaction source bank account.",
                          "type": "string"
                        },
                        "transaction_id": {
                          "description": "Transaction identifier.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 5,
                    "message": "transaction does not exist"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/loan/payment/account/{account_number}": {
      "get": {
        "description": "Retrieve Loan Payment Transactions using loan account number",
        "tags": [
          "Loan"
        ],
        "summary": "Retrieve Loan Payment Transactions",
        "operationId": "LoanService_GetAccountPayments",
        "parameters": [
          {
            "description": "AccountNumber is the actual account number of the loan account created loan record.<br />",
            "in": "path",
            "name": "account_number",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "description": "Limit is number of search return of transactions.<br />",
            "in": "query",
            "name": "limit",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "required": false
          },
          {
            "description": "Offset is number of items that should be skipped from the beginning of the result set.<br />",
            "in": "query",
            "name": "offset",
            "schema": {
              "format": "int32",
              "type": "integer"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "has_more": {
                      "description": "HasMore indicates if there are more transactions available.",
                      "type": "boolean"
                    },
                    "payments": {
                      "description": "Payments is the paginated query result.",
                      "items": {
                        "properties": {
                          "amount": {
                            "description": "Payment amount.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "customer_id": {
                            "description": "Customer associated with loan account.",
                            "type": "string"
                          },
                          "date": {
                            "description": "Payment date.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "loan_account": {
                            "description": "Loan account.",
                            "type": "string"
                          },
                          "method": {
                            "description": "Method of payment.",
                            "type": "string"
                          },
                          "outstanding_balance": {
                            "description": "Oustanding balance after installment is applied.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "overpayment": {
                            "description": "Oustanding balance after installment is applied.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "payment_allocation": {
                            "description": "Payment allocation breakdown.",
                            "properties": {
                              "accrued_interest_paid": {
                                "description": "Accrued Interest amount paid in this installment.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "interest_advance": {
                                "description": "Interest paid in advance by this payment.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "interest_due": {
                                "description": "Interest due at time of payment.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "interest_paid": {
                                "description": "Interest amount paid in this installment.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "interest_past_due": {
                                "description": "Interest past due date at time of payment.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "principal_advance": {
                                "description": "Principal paid in advance by this payment.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "principal_due": {
                                "description": "Principal due at time of payment.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "principal_paid": {
                                "description": "Principal amount paid in this installment.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "principal_past_due": {
                                "description": "Principal past due date at time of payment.",
                                "properties": {
                                  "cur": {
                                    "description": "ISO-4217 currency 3-character code.",
                                    "type": "string"
                                  },
                                  "num": {
                                    "format": "integer",
                                    "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "source_account": {
                            "description": "Transaction source bank account.",
                            "type": "string"
                          },
                          "transaction_id": {
                            "description": "Transaction identifier.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 5,
                    "message": "transaction does not exist"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/loan/simulate": {
      "post": {
        "description": "Simulate a customer loan.",
        "tags": [
          "Loan"
        ],
        "summary": "Simulate Loan",
        "operationId": "LoanService_SimulateLoan",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "calculated_totals": {
                      "description": "Total simulated repayment amount.",
                      "properties": {
                        "amortization_count": {
                          "description": "Number of scheduled installments in the loan repayment schedule.",
                          "format": "int32",
                          "type": "integer"
                        },
                        "interest_paid": {
                          "description": "Interest paid over the scheduled loan repayment.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "principal_amount": {
                          "description": "Loan principal amount to be repaid.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "customer_id": {
                      "description": "Customer simulating the loan.",
                      "type": "string"
                    },
                    "fees": {
                      "description": "Total simulated fees.",
                      "properties": {
                        "application": {
                          "description": "Loan application fee.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "bank": {
                          "description": "Banking fees.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "credit_investigation": {
                          "description": "Credit investigation service fee.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "docstamp": {
                          "description": "Documentary stamp tax.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "identification": {
                          "description": "Identification processing fee.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "insurance": {
                          "description": "Insurance policy charge.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "insurance_processing": {
                          "description": "Insurance processing fee.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "insurance_service": {
                          "description": "Insurance service fee.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "membership": {
                          "description": "Membership service fee.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "notary": {
                          "description": "Notorial service fee.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "opening": {
                          "description": "Loan account opening fee.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "service": {
                          "description": "Additional service charges.",
                          "properties": {
                            "cur": {
                              "description": "ISO-4217 currency 3-character code.",
                              "type": "string"
                            },
                            "num": {
                              "format": "integer",
                              "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    },
                    "grace_period": {
                      "description": "Grace period allowed after the loan payment due date.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "interest_rate": {
                      "description": "Interest applied.",
                      "properties": {
                        "annual": {
                          "description": "Annual interest rate.",
                          "type": "string"
                        },
                        "effective": {
                          "description": "Effective annual interest rate.",
                          "type": "string"
                        },
                        "monthly": {
                          "description": "Effective monthly interest rate.",
                          "type": "string"
                        },
                        "payment_interval": {
                          "description": "Effective interest rate over a payment period.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "schedule": {
                      "description": "Repayment schedule and details of loan payments simulated.",
                      "items": {
                        "properties": {
                          "additional_fee": {
                            "description": "Additional fees paid in this installment.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "capital_build_up_fee": {
                            "description": "Capital build up fee paid in this installment.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "due_date": {
                            "description": "Installment due date.",
                            "properties": {
                              "day": {
                                "description": "Day between 1 and 31.",
                                "format": "int32",
                                "maximum": 31,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "month": {
                                "description": "Month between 1 and 12.",
                                "format": "int32",
                                "maximum": 12,
                                "minimum": 1,
                                "type": "integer"
                              },
                              "year": {
                                "description": "Calendar year between 0 and 9999.",
                                "format": "int32",
                                "maximum": 9999,
                                "type": "integer"
                              }
                            },
                            "type": "object"
                          },
                          "interest_paid": {
                            "description": "Interest amount paid in this installment.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "outstanding_balance": {
                            "description": "Oustanding balance after installment is applied.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "payment": {
                            "description": "Payment amount due.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "principal_balance": {
                            "description": "Principal balance after installment is applied.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "principal_paid": {
                            "description": "Principal amount paid in this installment.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "program_fund_fee": {
                            "description": "Program fund fee paid in this installment.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "transfer_price_fee": {
                            "description": "Transfer price fee paid in this installment.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "simulated": {
                      "description": "Date the loan simulation was generated.",
                      "properties": {
                        "day": {
                          "description": "Day between 1 and 31.",
                          "format": "int32",
                          "maximum": 31,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "month": {
                          "description": "Month between 1 and 12.",
                          "format": "int32",
                          "maximum": 12,
                          "minimum": 1,
                          "type": "integer"
                        },
                        "year": {
                          "description": "Calendar year between 0 and 9999.",
                          "format": "int32",
                          "maximum": 9999,
                          "type": "integer"
                        }
                      },
                      "type": "object"
                    },
                    "term": {
                      "description": "Loan term length.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "year_length": {
                      "description": "Number of days in the year used for calculating simulated loan.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "customer_id": {
                    "description": "The id that is associated by our banking platform<br />to the individual or corporate/business customer record.<br />The customer_id is returned by the successful response of either<br />the Create Customer API or Create Corporate Customer API.<br />The value must be a valid customer_id that exists within your branch.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "reference_id": {
                    "description": "API User’s own unique reference code.<br />Limited to 0-36 characters.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "issuance_type": {
                    "description": "The type of loan issuance to process.<br />The value ust be a valid issuance_type from the Retrieve Loan Options Library API.<br />",
                    "type": "string",
                    "title": "",
                    "enum": [
                      "UNKNOWN",
                      "IssueNew"
                    ]
                  },
                  "loan_type": {
                    "description": "The type of loan to issue.<br />The value must be a valid loan_type from the Retrieve Loan Options Library API.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "principal_amount": {
                    "description": "The amount of money to be borrowed<br />The value must be a positive number.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  },
                  "schedule_code": {
                    "description": "Schedule of repayment installments.<br />See installment schedule list in loan options for available schedules.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "amortization_count": {
                    "description": "Total number of planned installments in the full repayment schedule.<br />",
                    "type": "integer",
                    "title": ""
                  },
                  "interest_rate": {
                    "description": "Annual interest rate applied to the loan interest accrual calculations.<br />Format as a decimal with up to five fractional digits (14.54323% => \"14.54323\").<br />",
                    "type": "string",
                    "title": ""
                  },
                  "release_date": {
                    "description": "Funds release scheduled date.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "day": {
                        "description": "Day between 1 and 31.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "month": {
                        "description": "Month between 1 and 12.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "year": {
                        "description": "Calendar year between 0 and 9999.<br />",
                        "type": "integer",
                        "title": ""
                      }
                    }
                  },
                  "amortization_due": {
                    "description": "First installment due date.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "day": {
                        "description": "Day between 1 and 31.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "month": {
                        "description": "Month between 1 and 12.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "year": {
                        "description": "Calendar year between 0 and 9999.<br />",
                        "type": "integer",
                        "title": ""
                      }
                    }
                  }
                },
                "required": [
                  "customer_id",
                  "issuance_type",
                  "loan_type",
                  "principal_amount",
                  "schedule_code",
                  "amortization_count",
                  "interest_rate",
                  "release_date"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/loans/{account_number}/check": {
      "get": {
        "description": "Verify existence of a loan account",
        "tags": [
          "Loan"
        ],
        "summary": "Verify Loan Account Existence",
        "operationId": "LoanService_CheckLoan",
        "parameters": [
          {
            "description": "<br />",
            "in": "path",
            "name": "account_number",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "CheckLoanResponse is the verification of an loan's existence.",
                  "properties": {
                    "account_number": {
                      "description": "Validated loan identifier.",
                      "type": "string"
                    },
                    "active": {
                      "description": "Flag for active loan.  Inactive loan cannot accept transactions.",
                      "type": "boolean"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/loans/{customer_id}/document": {
      "post": {
        "description": "Submit supporting documents for loan applications.",
        "tags": [
          "Loan"
        ],
        "summary": "Submit Loan Document.",
        "operationId": "LoanService_SubmitLoanDoc",
        "parameters": [
          {
            "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.<br />The customer_id is returned by the successful response of either the Create Customer API or Create Corporate Customer API.<br />Must be a valid customer_id that you have created within your Branch.<br />",
            "in": "path",
            "name": "customer_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "document_id": {
                      "description": "Document identifier in the loan system.  Use this in create loan to attach the document.",
                      "type": "string"
                    },
                    "processed": {
                      "description": "The date and time that the file was uploaded.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "customer_id": {
                    "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.<br />The customer_id is returned by the successful response of either the Create Customer API or Create Corporate Customer API.<br />Must be a valid customer_id that you have created within your Branch.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "document_name": {
                    "description": "Name of the id/document  being uploaded.<br />Limited to 4-64 chars.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "comments": {
                    "description": "Additional comments or remarks regarding the id/document being uploaded.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "received": {
                    "description": "The date when id/document being uploaded was received.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "day": {
                        "description": "Day between 1 and 31.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "month": {
                        "description": "Month between 1 and 12.<br />",
                        "type": "integer",
                        "title": ""
                      },
                      "year": {
                        "description": "Calendar year between 0 and 9999.<br />",
                        "type": "integer",
                        "title": ""
                      }
                    }
                  },
                  "file": {
                    "description": "The Base64 encoded value of the id/document being uploaded.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "reference_id": {
                    "description": "Document reference identifier.  Can be generated by partner system or input by a user.<br />",
                    "type": "string",
                    "title": ""
                  }
                },
                "required": [
                  "customer_id",
                  "document_name",
                  "file"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/loans/autodebitpayment": {
      "post": {
        "description": "Allow the Netbank Client to enroll a savings account to a recurring auto-debit payment to a loan account.",
        "tags": [
          "Loan"
        ],
        "summary": "Process Auto-Debit Loan Payment",
        "operationId": "LoanService_CreateAutodebit",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "autodebit_id": {
                      "description": "Identifier of the created autodebit.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "reference_id": {
                    "description": "API User’s own unique reference code.<br />Limited to 0-36 characters.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "bank_account_number": {
                    "description": "Netbank Bank Account Number where the funds will be drawn/debited from to pay the loan.<br />Must be a valid Netbank account number with dash (e.g. 005-0010-00032-2) that you have created.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "loan_account_number": {
                    "description": "The productNumber that was returned by the Loan Approval Webhook for the loan that was created via Create Loan API.<br />Must be a valid loan product number.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "remarks": {
                    "description": "Additional information regarding the transaction.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "strategy": {
                    "description": "Determines how to collect the amount to be debited.<br />",
                    "type": "string",
                    "title": "",
                    "enum": [
                      "UnknownStrategy",
                      "PARTIAL",
                      "FULL"
                    ]
                  },
                  "schedule": {
                    "description": "Determine on when debit will be processed.<br />",
                    "type": "string",
                    "title": "",
                    "enum": [
                      "UnknownSchedule",
                      "DAILY",
                      "DUE_DATE",
                      "MONTH_END"
                    ]
                  }
                },
                "required": [
                  "bank_account_number",
                  "loan_account_number",
                  "strategy",
                  "schedule"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/qrph/decode": {
      "get": {
        "description": "Under Development. Available only on api-sandbox.netbank.ph and api-uat.netbank.ph.<br>Allows you to decode a QRPH string that was scanned from an image.",
        "tags": [
          "QR-PH"
        ],
        "summary": "Decode QRPH string",
        "operationId": "QR-PH_DecodeQRPH",
        "parameters": [
          {
            "description": "Decoded string from QR code image.<br />",
            "in": "query",
            "name": "qr_string",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "DecodeQRPHResponse is the response message for a qrph creation.",
                  "properties": {
                    "amount": {
                      "description": "Amount defines a transaction amount.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "destination_account": {
                      "description": "Contains the details of the bank account where funds will be credited to.",
                      "type": "string"
                    },
                    "destination_bank_code": {
                      "description": "Bank Identification Code (BIC) of the destination account.",
                      "type": "string"
                    },
                    "disburse_id": {
                      "description": "Identifier that is used to disburse the decoded QRPH.",
                      "type": "string"
                    },
                    "merchant_city": {
                      "description": "City of the destination merchant.",
                      "type": "string"
                    },
                    "merchant_id": {
                      "description": "Identifier of merchant present in P2M codes.",
                      "type": "string"
                    },
                    "merchant_name": {
                      "description": "Name of the destination merchant.",
                      "type": "string"
                    },
                    "merchant_postcode": {
                      "description": "Postal code of the destination merchant.",
                      "type": "string"
                    },
                    "qr_transaction_type": {
                      "default": "UnknownQRTransactionType",
                      "description": "Type of the payment QR code transaction. Either P2P or P2M.",
                      "enum": [
                        "UnknownQRTransactionType",
                        "P2P",
                        "P2M"
                      ],
                      "title": "QRTransactionType transaction between person to person (P2P) or person to merchant (P2M)",
                      "type": "string"
                    },
                    "qr_type": {
                      "default": "UnknownQRType",
                      "description": "Type of the payment QR code. Either static or dynamic.",
                      "enum": [
                        "UnknownQRType",
                        "Static",
                        "Dynamic"
                      ],
                      "title": "QRType communication technology of QR Code whether STATIC or DYNAMIC",
                      "type": "string"
                    },
                    "reference_number": {
                      "description": "Reference number of the QR code.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "QRPH code image created successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 3,
                    "message": "qr_string: cannot be blank; description: cannot be blank."
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/qrph/generate": {
      "post": {
        "description": "Allows you to generate scannable QRPH images that conform to the standard.",
        "tags": [
          "QR-PH"
        ],
        "summary": "Generate QRPH images",
        "operationId": "QR-PH_GenerateQRPH",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "CreateQRPHResponse is the response message for a qrph creation.",
                  "properties": {
                    "qr_code": {
                      "format": "byte",
                      "title": "Generated QR code image bytes base64 encoded",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "A successful response."
          },
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "CreateQRPHResponse is the response message for a qrph creation.",
                  "example": {
                    "qr_code": "iVBORw0KGgoAAAANSUhEUgAAAAcAAAAFCAYAAACJmvbYAAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAFUlEQVQImWP8"
                  },
                  "properties": {
                    "qr_code": {
                      "format": "byte",
                      "title": "Generated QR code image bytes base64 encoded",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "QRPH code image created successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 3,
                    "message": "destination_account: cannot be blank; description: cannot be blank."
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "CreateQRPHRequest is the request message for creating a QRPH images.",
                "type": "object",
                "properties": {
                  "qr_type": {
                    "description": "- Static: QRType_Static the payment amount may or may not be indicated.<br />Supported by all banks. Same QR for multiple transaction. If the amount is not indicated, it needs to be entered by the consumer<br /> - Dynamic: QRType_Dynamic the payment amount is usually part of the QR code information<br />Supported by some banks only. Unique QR for every transaction.<br />",
                    "type": "string",
                    "title": "Type of the payment QR code. Either static or dynamic",
                    "enum": [
                      "UnknownQRType",
                      "Static",
                      "Dynamic"
                    ]
                  },
                  "qr_transaction_type": {
                    "description": "- P2P: Transaction between Person to Person using QR Code<br /> - P2M: Transaction between Person to Merchant.<br />The Merchant referred to in this term corresponds to any registered and established institution with an acquiring relationship with its bank of account that provides goods and/or services to customers in exchange for a specific payment amount.<br />",
                    "type": "string",
                    "title": "Type of the payment QR code transaction. Either P2P or P2M",
                    "enum": [
                      "UnknownQRTransactionType",
                      "P2P",
                      "P2M"
                    ]
                  },
                  "destination_account": {
                    "description": "Contains the details of the bank account where funds will be credited to.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "resolution": {
                    "description": "Defines the resolution in pixels of the image generated. Value of 480 will generate an image with dimension of 480x480.<br />Defaults to 720, valid range [ 480 .. 1080 ]<br />",
                    "type": "integer",
                    "title": ""
                  },
                  "purpose": {
                    "description": "Additional Data. Purpose of the transaction. Maximum character length 25.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "reference_id": {
                    "description": "Additional Data. Any value defined by the merchant in order to identify the transaction. Maximum character length 25.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "store_label": {
                    "description": "A distinctive label associated to a store of the merchant. Maximum character length 15.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "merchant_name": {
                    "description": "Name that might get displayed to the end user.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "merchant_city": {
                    "description": "City of the destination merchant.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "merchant_id": {
                    "description": "MerchantID Identifier of merchant present in P2M codes.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "amount": {
                    "description": "Amount defines a transaction amount.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  }
                },
                "required": [
                  "qr_type",
                  "qr_transaction_type",
                  "destination_account",
                  "merchant_name",
                  "merchant_city"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/qrph/transactions": {
      "post": {
        "description": "Under Development. Available only on api-sandbox.netbank.ph and api-uat.netbank.ph.<br>Allows you to trigger a disbursement with the decoded QRPH disburse id from your Netbank Bank Account.",
        "tags": [
          "QR-PH"
        ],
        "summary": "Process QRPH disbursement",
        "operationId": "QR-PH_DisburseQRPH",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "CreateTransactionResponse is the response message for a transaction creation.",
                  "example": {
                    "transaction_id": "505873"
                  },
                  "properties": {
                    "message": {
                      "description": "Detailed status message in the case of processing error.",
                      "type": "string"
                    },
                    "status": {
                      "default": "UnknownStatus",
                      "description": "Status defines the status of a transaction.\n\n - Settled: Status_Settled is the value for a successful transaction.\n - ForSettlement: Status_ForSettlement is the value for ongoing settlement transactions.\n - Pending: Status_Pending is the value for a pending transaction.\n - Rejected: Status_Rejected is the value for a rejected transaction.\n - NoDisbursement: Status_NoDisbursement is the value for a empty transaction.",
                      "enum": [
                        "UnknownStatus",
                        "Settled",
                        "ForSettlement",
                        "Pending",
                        "Rejected",
                        "NoDisbursement"
                      ],
                      "type": "string"
                    },
                    "transaction_id": {
                      "description": "The id that is associated by our platform to the disbursement transaction.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Transaction created successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 3,
                    "message": "disburse_id: cannot be blank."
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "disburse_id": {
                    "description": "Identifier from 'Decode QRPH string'. The details from the decoded QRPH code will be used to create a disbursement.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "source_account_number": {
                    "description": "Netbank Bank Account Number where the funds will be drawn/debited from.<br />Must be a valid Netbank account number with dash (e.g. 005-0010-00032-2) that you have created.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "reference_id": {
                    "description": "API User's own unique reference code.<br />Limited to 0-36 characters.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "amount": {
                    "description": "Amount defines a transaction amount.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  }
                },
                "required": [
                  "disburse_id",
                  "source_account_number"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/sms/send": {
      "post": {
        "description": "Allows you to Send an SMS.",
        "tags": [
          "SMS"
        ],
        "summary": "Send an SMS",
        "operationId": "SMS_SendSMS",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "processed": "2022-02-02T02:10:52.880Z"
                  },
                  "properties": {
                    "processed": {
                      "description": "The date and time that the sms was processed.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 3,
                    "message": "to: cannot be blank; body: cannot be blank."
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "body": {
                    "description": "The content body of the document.<br />For “text/plain” document, this is the UTF-8 text message.<br />Limited to 1-1500 characters<br />",
                    "type": "string",
                    "title": ""
                  },
                  "content_type": {
                    "description": "The MIME type of the content body.<br />Currently supported value is “text/plain”.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "date": {
                    "description": "The date of the document.Format can be:<br />a. ISO 8601 – “yyyy-mm-ddThh:mm:ss+tzinfo”<br />b. “yyyymmddThhmmss”<br />The default timezone is “UTC” (GMT) if tzinfo is not present.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "delivery_receipt_url": {
                    "description": "URL where the Messaging Gateway will attempt to POST the status of the document.<br />Limited to 350 characters<br />",
                    "type": "string",
                    "title": ""
                  },
                  "from_alias": {
                    "description": "alphanumeric up to 11 characters.<br />The alphanumeric sender ID, if enabled and allowed in your account.<br />Note that this differs from the ‘from‘ field – which refers to the VirtualShortcode assigned to you.<br />Limited to 11 characters<br />",
                    "type": "string",
                    "title": ""
                  },
                  "message_id": {
                    "description": "globally unique identifier of the document message.<br />If this is omitted in MT Documents, a unique id string is automatically generated.<br />API Clients MAY optionally inject and generate their own unique IDs for the DeliveryReceipt.<br />If this ID is not unique however, this may cause confusion in the tracking of DeliveryReceipts.<br />Limited to 1-50 characters<br />",
                    "type": "string",
                    "title": ""
                  },
                  "to": {
                    "description": "The destination of the document;For MT documents, this will be the mobile number OR a masked-mobile-number.<br />The mobile number is expected to follow the E.164 international format without the leading ‘+’,<br />i.e. country code + phone number (e.g. 639101234567)<br />Limited to 12 characters<br />",
                    "type": "string",
                    "title": ""
                  }
                },
                "required": [
                  "to",
                  "content_type",
                  "body",
                  "date"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/transaction/cancel/{transaction_id}": {
      "post": {
        "description": "Allows you to cancel a PESONet transaction that you’ve triggered as long as it’s within the processing cut-off",
        "tags": [
          "Disburse-To-Account"
        ],
        "summary": "Cancel PESOnet Transaction",
        "operationId": "Disburse-To-Account_CancelPESONetTransaction",
        "parameters": [
          {
            "description": "The id that is associated by our platform to the disbursement transaction<br />",
            "in": "path",
            "name": "transaction_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "description": "Indicates message success on canceling the transaction.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Current status of the transaction.",
                      "type": "string"
                    },
                    "updated": {
                      "description": "Indicates exact time on transaction canceled.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 5,
                    "message": "transaction does not exist"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    },
    "/v1/transactions": {
      "post": {
        "description": "Allows you to trigger a fund transfer from your Netbank Bank Account to another Netbank Bank Account (DIRECT) or a bank/e-wallet account in other financial institutions (INSTAPAY or PESONET).",
        "tags": [
          "Disburse-To-Account"
        ],
        "summary": "Process Account-To-Account Fund Transfer",
        "operationId": "Disburse-To-Account_ProcessAccount-To-AccountFundTransfer",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "CreateTransactionResponse is the response message for a transaction creation.",
                  "example": {
                    "transaction_id": "505873"
                  },
                  "properties": {
                    "message": {
                      "description": "Detailed status message in the case of processing error.",
                      "type": "string"
                    },
                    "status": {
                      "default": "UnknownStatus",
                      "description": "Status defines the status of a transaction.\n\n - Settled: Status_Settled is the value for a successful transaction.\n - ForSettlement: Status_ForSettlement is the value for ongoing settlement transactions.\n - Pending: Status_Pending is the value for a pending transaction.\n - Rejected: Status_Rejected is the value for a rejected transaction.\n - NoDisbursement: Status_NoDisbursement is the value for a empty transaction.",
                      "enum": [
                        "UnknownStatus",
                        "Settled",
                        "ForSettlement",
                        "Pending",
                        "Rejected",
                        "NoDisbursement"
                      ],
                      "type": "string"
                    },
                    "transaction_id": {
                      "description": "The id that is associated by our platform to the disbursement transaction.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Transaction created successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 3,
                    "message": "amount: (num: cannot be blank.)."
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "example": {
                  "reference_id": "01",
                  "settlement_rail": "PESONET",
                  "source_account_number": "039-01-00001-7",
                  "sender": {
                    "address": {
                      "address1": "Francisco st",
                      "city": "Pasig",
                      "country": "PH",
                      "postal_code": "1605"
                    },
                    "customer_id": "2007",
                    "mobile_no": "string",
                    "name": "Sender Name"
                  },
                  "destination_account": {
                    "account_number": "101238071855",
                    "bank_code": "RBSMPHMMXXX"
                  },
                  "recipient": {
                    "address": {
                      "address1": "Riverfront",
                      "city": "Pasig",
                      "country": "PH",
                      "postal_code": "1606"
                    },
                    "mobile_no": "6393270777",
                    "name": "Recipient Name"
                  },
                  "remarks": "Remarks",
                  "amount": {
                    "cur": "PHP",
                    "num": "100000"
                  }
                },
                "description": "CreateTransactionRequest is the request message for creating a transaction.\nOnly one of SourceOfflineUser and DestinationOfflineUser can be used to create a transaction.",
                "type": "object",
                "properties": {
                  "reference_id": {
                    "description": "API User’s own unique reference code.<br />Limited to 0-36 characters.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "settlement_rail": {
                    "description": "The mode of fund transfer.<br />DIRECT = Netbank Account to Netbank Account Fund Transfer.<br />INSTAPAY = Real-time interbank fund transfer with a Php 50,000 limit per transaction.<br />PESONET = Interbank fund transfer without a transaction amount limit.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "source_account_number": {
                    "description": "Netbank Bank Account Number where the funds will be drawn/debited from.<br />Must be a valid Netbank account number with dash (e.g. 005-0010-00032-2) that you have created.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "sender": {
                    "description": "Contains the details of the sending entity.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "name": {
                        "description": "Name (Full name) of the person.<br />Limited to 1-64 chars.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "address": {
                        "description": "Full Address.<br />",
                        "type": "object",
                        "title": "",
                        "properties": {
                          "address1": {
                            "description": "Line 1 of the address.<br />Limited to 1-128 chars.<br />",
                            "type": "string",
                            "title": ""
                          },
                          "address2": {
                            "description": "Next Line of the address.<br />Limited to 0-128 chars.<br />",
                            "type": "string",
                            "title": ""
                          },
                          "city": {
                            "description": "City of the address.<br />Limited to 1-128 chars.<br />",
                            "type": "string",
                            "title": ""
                          },
                          "country": {
                            "description": "Country of the address.<br />Use the ISO-3166 Alpha-2 Country Code.<br />",
                            "type": "string",
                            "title": ""
                          },
                          "postal_code": {
                            "description": "Postal Code of the sender’s address.<br />Limited to 1-20 chars.<br />",
                            "type": "string",
                            "title": ""
                          },
                          "province": {
                            "description": "Province of the address.<br />Limited to 1-128 chars.<br />",
                            "type": "string",
                            "title": ""
                          },
                          "state": {
                            "description": "State of the address.<br />Limited to 1-128 chars.<br />",
                            "type": "string",
                            "title": ""
                          }
                        },
                        "required": [
                          "address1",
                          "city",
                          "country",
                          "postal_code"
                        ]
                      },
                      "mobile_no": {
                        "description": "MobileNo contact of the person.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "customer_id": {
                        "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.<br />The customer_id is returned by the successful response of either the Create Customer API or Create Corporate Customer API.<br />Must be a valid customer_id that you have created within your Branch.<br />",
                        "type": "string",
                        "title": ""
                      }
                    },
                    "required": [
                      "customer_id"
                    ]
                  },
                  "destination_account": {
                    "description": "Contains the details of the bank account where funds will be credited to.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "account_alias": {
                        "description": "Alias account number.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "account_number": {
                        "description": "AccountID is the identifier of the account.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "bank_code": {
                        "description": "BankCode is code of the bank the account belongs to.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "branch": {
                        "description": "Branch is the account branch number<br />",
                        "type": "string",
                        "title": ""
                      }
                    },
                    "required": [
                      "account_number",
                      "bank_code"
                    ]
                  },
                  "recipient": {
                    "description": "Contains the details of the receiving entity.<br />PesoNet and InstaPay transfers require recipient name.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "name": {
                        "description": "Name (Full name) of the person.<br />Limited to 1-64 chars.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "address": {
                        "description": "Full Address.<br />",
                        "type": "object",
                        "title": "",
                        "properties": {
                          "address1": {
                            "description": "Line 1 of the address.<br />Limited to 1-128 chars.<br />",
                            "type": "string",
                            "title": ""
                          },
                          "address2": {
                            "description": "Next Line of the address.<br />Limited to 0-128 chars.<br />",
                            "type": "string",
                            "title": ""
                          },
                          "city": {
                            "description": "City of the address.<br />Limited to 1-128 chars.<br />",
                            "type": "string",
                            "title": ""
                          },
                          "country": {
                            "description": "Country of the address.<br />Use the ISO-3166 Alpha-2 Country Code.<br />",
                            "type": "string",
                            "title": ""
                          },
                          "postal_code": {
                            "description": "Postal Code of the sender’s address.<br />Limited to 1-20 chars.<br />",
                            "type": "string",
                            "title": ""
                          },
                          "province": {
                            "description": "Province of the address.<br />Limited to 1-128 chars.<br />",
                            "type": "string",
                            "title": ""
                          },
                          "state": {
                            "description": "State of the address.<br />Limited to 1-128 chars.<br />",
                            "type": "string",
                            "title": ""
                          }
                        },
                        "required": [
                          "address1",
                          "city",
                          "country",
                          "postal_code"
                        ]
                      },
                      "mobile_no": {
                        "description": "MobileNo contact of the person.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "customer_id": {
                        "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.<br />The customer_id is returned by the successful response of either the Create Customer API or Create Corporate Customer API.<br />Must be a valid customer_id that you have created within your Branch.<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  },
                  "remarks": {
                    "description": "Additional information regarding the transaction.<br />Note:  Instapay and PesoNet rails will truncate to 35 characters in the memo line.<br />",
                    "type": "string",
                    "title": ""
                  },
                  "amount": {
                    "description": "Amount defines a transaction amount.<br />",
                    "type": "object",
                    "title": "",
                    "properties": {
                      "cur": {
                        "description": "ISO-4217 currency 3-character code.<br />",
                        "type": "string",
                        "title": ""
                      },
                      "num": {
                        "description": "Monetary value in the given currency.<br />The value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)<br />",
                        "type": "string",
                        "title": ""
                      }
                    }
                  }
                },
                "required": [
                  "reference_id",
                  "settlement_rail",
                  "source_account_number",
                  "sender",
                  "destination_account",
                  "recipient",
                  "amount"
                ]
              }
            }
          },
          "required": true
        }
      }
    },
    "/v1/transactions/{transaction_id}": {
      "get": {
        "description": "Allows you to retrieve the details of a fund transfer transaction that you’ve triggered.",
        "tags": [
          "Disburse-To-Account"
        ],
        "summary": "Retrieve Account-to-Account Transaction Details",
        "operationId": "Disburse-To-Account_RetrieveAccount-To-AccountTransactionDetails",
        "parameters": [
          {
            "description": "The id that is associated by our platform to the disbursement transaction.<br />The transaction_id is returned by the successful response of Process Account-to-Account Fund Transfer API.<br />Must be a valid transaction_id that you have created within your Branch.<br />",
            "in": "path",
            "name": "transaction_id",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "description": "Transaction holds all details about a transaction.",
                  "example": {
                    "amount": {
                      "cur": "PHP",
                      "num": "100000"
                    },
                    "destination_account": {
                      "account_number": "00501000064",
                      "bank_code": "ALKBPHM2XXX"
                    },
                    "recipient": {
                      "address": "test address",
                      "customer_id": "1369",
                      "first_name": "FTest",
                      "last_name": "LTest",
                      "location": {
                        "latitude": 80,
                        "longitude": 80
                      },
                      "middle_name": "MTest",
                      "mobile_no": "6393270777"
                    },
                    "reference_id": "01",
                    "remarks": "Remarks",
                    "sender": {
                      "address": "test address",
                      "customer_id": "1340",
                      "first_name": "FTest",
                      "last_name": "LTest",
                      "location": {
                        "latitude": 80,
                        "longitude": 80
                      },
                      "middle_name": "MTest",
                      "mobile_no": "string"
                    },
                    "settlement_rail": "PESONET",
                    "source_account_number": "005-01-00007-2",
                    "status": "PENDING"
                  },
                  "properties": {
                    "amount": {
                      "description": "Amount holds the amount value and currency of the transaction.",
                      "properties": {
                        "cur": {
                          "description": "ISO-4217 currency 3-character code.",
                          "type": "string"
                        },
                        "num": {
                          "format": "integer",
                          "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "customer_id": {
                      "description": "CustomerID is the identifier of the issuer of the transaction.",
                      "type": "string"
                    },
                    "date": {
                      "description": "Date is the date of the transaction.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "description": "Source + movement of the specific transaction.",
                      "type": "string"
                    },
                    "destination_account": {
                      "description": "DestinationAccount is the account receiving the transaction.",
                      "properties": {
                        "account_alias": {
                          "description": "Alias account number.",
                          "type": "string"
                        },
                        "account_number": {
                          "description": "AccountID is the identifier of the account.",
                          "type": "string"
                        },
                        "bank_code": {
                          "description": "BankCode is code of the bank the account belongs to.",
                          "type": "string"
                        },
                        "branch": {
                          "title": "Branch is the account branch number",
                          "type": "string"
                        }
                      },
                      "required": [
                        "account_number",
                        "bank_code"
                      ],
                      "type": "object"
                    },
                    "destination_offline_user": {
                      "description": "DestinationOfflineUser is the contact information for an offline user.",
                      "properties": {
                        "address": {
                          "description": "Full Address.",
                          "properties": {
                            "address1": {
                              "description": "Line 1 of the address.\nLimited to 1-128 chars.",
                              "type": "string"
                            },
                            "address2": {
                              "description": "Next Line of the address.\nLimited to 0-128 chars.",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the address.\nLimited to 1-128 chars.",
                              "type": "string"
                            },
                            "country": {
                              "description": "Country of the address.\nUse the ISO-3166 Alpha-2 Country Code.",
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "Postal Code of the sender’s address.\nLimited to 1-20 chars.",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the address.\nLimited to 1-128 chars.",
                              "type": "string"
                            },
                            "state": {
                              "description": "State of the address.\nLimited to 1-128 chars.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "address1",
                            "city",
                            "country",
                            "postal_code"
                          ],
                          "type": "object"
                        },
                        "customer_id": {
                          "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.\nThe customer_id is returned by the successful response of either the Create Customer API or Create Corporate Customer API.\nMust be a valid customer_id that you have created within your Branch.",
                          "type": "string"
                        },
                        "mobile_no": {
                          "description": "MobileNo contact of the person.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name (Full name) of the person.\nLimited to 1-64 chars.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "fees": {
                      "description": "Fees assesed in the processing of the transaction.",
                      "items": {
                        "properties": {
                          "amount": {
                            "description": "Fee amount assessed.",
                            "properties": {
                              "cur": {
                                "description": "ISO-4217 currency 3-character code.",
                                "type": "string"
                              },
                              "num": {
                                "format": "integer",
                                "title": "Monetary value in the given currency.\nThe value must include the 2 decimal places without the decimal point (e.g. 50000 = 500.00)",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "class": {
                            "description": "Fee classification.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description of assessed fee.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "operation_id": {
                      "title": "OperationID is the date record when the transaction is modified",
                      "type": "string"
                    },
                    "reference_id": {
                      "description": "Transaction reference identifier.  Can be generated by payment system or input by a user.",
                      "type": "string"
                    },
                    "remarks": {
                      "description": "Remarks is an informational note about the transaction.",
                      "type": "string"
                    },
                    "settlement_rail": {
                      "title": "SettlementRail is the value to allow multi-rail environments",
                      "type": "string"
                    },
                    "source_account": {
                      "description": "SourceAccount is the account emitting the transaction.",
                      "properties": {
                        "account_alias": {
                          "description": "Alias account number.",
                          "type": "string"
                        },
                        "account_number": {
                          "description": "AccountID is the identifier of the account.",
                          "type": "string"
                        },
                        "bank_code": {
                          "description": "BankCode is code of the bank the account belongs to.",
                          "type": "string"
                        },
                        "branch": {
                          "title": "Branch is the account branch number",
                          "type": "string"
                        }
                      },
                      "required": [
                        "account_number",
                        "bank_code"
                      ],
                      "type": "object"
                    },
                    "source_offline_user": {
                      "description": "SourceOfflineUser is the contact information for an offline user.",
                      "properties": {
                        "address": {
                          "description": "Full Address.",
                          "properties": {
                            "address1": {
                              "description": "Line 1 of the address.\nLimited to 1-128 chars.",
                              "type": "string"
                            },
                            "address2": {
                              "description": "Next Line of the address.\nLimited to 0-128 chars.",
                              "type": "string"
                            },
                            "city": {
                              "description": "City of the address.\nLimited to 1-128 chars.",
                              "type": "string"
                            },
                            "country": {
                              "description": "Country of the address.\nUse the ISO-3166 Alpha-2 Country Code.",
                              "type": "string"
                            },
                            "postal_code": {
                              "description": "Postal Code of the sender’s address.\nLimited to 1-20 chars.",
                              "type": "string"
                            },
                            "province": {
                              "description": "Province of the address.\nLimited to 1-128 chars.",
                              "type": "string"
                            },
                            "state": {
                              "description": "State of the address.\nLimited to 1-128 chars.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "address1",
                            "city",
                            "country",
                            "postal_code"
                          ],
                          "type": "object"
                        },
                        "customer_id": {
                          "description": "The id that is associated by our core banking platform to the individual or corporate/ business customer record.\nThe customer_id is returned by the successful response of either the Create Customer API or Create Corporate Customer API.\nMust be a valid customer_id that you have created within your Branch.",
                          "type": "string"
                        },
                        "mobile_no": {
                          "description": "MobileNo contact of the person.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name (Full name) of the person.\nLimited to 1-64 chars.",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "default": "UnknownStatus",
                      "description": "Status is the status of the transaction.",
                      "enum": [
                        "UnknownStatus",
                        "Settled",
                        "ForSettlement",
                        "Pending",
                        "Rejected",
                        "NoDisbursement"
                      ],
                      "type": "string"
                    },
                    "status_details": {
                      "description": "Transaction processing details.",
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string"
                          },
                          "status": {
                            "default": "UnknownStatus",
                            "description": "Status defines the status of a transaction.\n\n - Settled: Status_Settled is the value for a successful transaction.\n - ForSettlement: Status_ForSettlement is the value for ongoing settlement transactions.\n - Pending: Status_Pending is the value for a pending transaction.\n - Rejected: Status_Rejected is the value for a rejected transaction.\n - NoDisbursement: Status_NoDisbursement is the value for a empty transaction.",
                            "enum": [
                              "UnknownStatus",
                              "Settled",
                              "ForSettlement",
                              "Pending",
                              "Rejected",
                              "NoDisbursement"
                            ],
                            "type": "string"
                          },
                          "updated": {
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "transaction_id": {
                      "description": "TransactionID is the unique identifier of a transaction.",
                      "type": "string"
                    },
                    "type": {
                      "default": "UnknownType",
                      "description": "Type is the type of transaction.",
                      "enum": [
                        "UnknownType",
                        "Credit",
                        "Debit",
                        "NonMonetary"
                      ],
                      "type": "string"
                    },
                    "updated": {
                      "format": "date-time",
                      "title": "UpdatedDate is the date record when the transaction is modified",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Request executed successfully."
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when request is incorrect or malformed."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when not authorized to perform this action"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when the user does not have permission to access the resource."
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "code": 5,
                    "message": "transaction does not exist"
                  },
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "Returned when the resource is not found."
          },
          "500": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Returned when an unexpected error occured on the server side."
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Error code returned by our APIs. This can serve as the secondary reference for error handling.  HTTP Code should still act as the primary reference.</br> Refer to the Error Code section for the full list and corresponding description.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "details": {
                      "items": {
                        "properties": {
                          "typeUrl": {
                            "type": "string"
                          },
                          "value": {
                            "format": "byte",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "message": {
                      "description": "Description of the error. This can serve as the tertiary reference for error handling.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "description": "An unexpected error response."
          }
        }
      }
    }
  }
}